

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Jan 16 10:39:15 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     _ADCON0	set	4034
    40  0000                     _ADCON1	set	4033
    41  0000                     _ADCON2	set	4032
    42  0000                     _ADRESH	set	4036
    43  0000                     _ADRESL	set	4035
    44  0000                     _BAUDCON	set	4024
    45  0000                     _INTCON	set	4082
    46  0000                     _LATC	set	3979
    47  0000                     _LATD	set	3980
    48  0000                     _PORTA	set	3968
    49  0000                     _PORTB	set	3969
    50  0000                     _RCREG	set	4014
    51  0000                     _RCSTA	set	4011
    52  0000                     _SPBRG	set	4015
    53  0000                     _T0CON	set	4053
    54  0000                     _TMR0H	set	4055
    55  0000                     _TMR0L	set	4054
    56  0000                     _TRISA	set	3986
    57  0000                     _TRISB	set	3987
    58  0000                     _TRISC	set	3988
    59  0000                     _TRISCbits	set	3988
    60  0000                     _TRISD	set	3989
    61  0000                     _TXREG	set	4013
    62  0000                     _TXSTA	set	4012
    63  0000                     _RBIF	set	32656
    64  0000                     _RCIF	set	31989
    65  0000                     _T0IF	set	32658
    66  0000                     _TXIF	set	31988
    67                           
    68                           	psect	smallconst
    69  000800                     __psmallconst:
    70                           	opt stack 0
    71  000800  00                 	db	0
    72  000801                     STR_1:
    73  000801  69                 	db	105	;'i'
    74  000802  64                 	db	100	;'d'
    75  000803  31                 	db	49	;'1'
    76  000804  00                 	db	0
    77                           
    78                           ; #config settings
    79  000805  00                 	db	0	; dummy byte at the end
    80  0000                     
    81                           	psect	cinit
    82  001604                     __pcinit:
    83                           	opt stack 0
    84  001604                     start_initialization:
    85                           	opt stack 0
    86  001604                     __initialization:
    87                           	opt stack 0
    88                           
    89                           ; Clear objects allocated to BANK0 (8 bytes)
    90  001604  EE00  F06C         	lfsr	0,__pbssBANK0
    91  001608  0E08               	movlw	8
    92  00160A                     clear_0:
    93  00160A  6AEE               	clrf	postinc0,c
    94  00160C  06E8               	decf	wreg,f,c
    95  00160E  E1FD               	bnz	clear_0
    96                           
    97                           ; Clear objects allocated to COMRAM (63 bytes)
    98  001610  EE00  F001         	lfsr	0,__pbssCOMRAM
    99  001614  0E3F               	movlw	63
   100  001616                     clear_1:
   101  001616  6AEE               	clrf	postinc0,c
   102  001618  06E8               	decf	wreg,f,c
   103  00161A  E1FD               	bnz	clear_1
   104  00161C                     end_of_initialization:
   105                           	opt stack 0
   106  00161C                     __end_of__initialization:
   107                           	opt stack 0
   108  00161C  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   109  00161E  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   110  001620  0E00               	movlw	low (__Lmediumconst shr (0+16))
   111  001622  6EF8               	movwf	tblptru,c
   112  001624  0100               	movlb	0
   113  001626  EFDF  F009         	goto	_main	;jump to C main() function
   114                           tblptru	equ	0xFF8
   115                           postinc0	equ	0xFEE
   116                           wreg	equ	0xFE8
   117                           
   118                           	psect	bssCOMRAM
   119  000001                     __pbssCOMRAM:
   120                           	opt stack 0
   121  000001                     _sensor:
   122                           	opt stack 0
   123  000001                     	ds	44
   124  00002D                     _value:
   125                           	opt stack 0
   126  00002D                     	ds	10
   127  000037                     _glove:
   128                           	opt stack 0
   129  000037                     	ds	5
   130  00003C                     _ch:
   131                           	opt stack 0
   132  00003C                     	ds	2
   133  00003E                     _pres:
   134                           	opt stack 0
   135  00003E                     	ds	2
   136                           tblptru	equ	0xFF8
   137                           postinc0	equ	0xFEE
   138                           wreg	equ	0xFE8
   139                           
   140                           	psect	bssBANK0
   141  00006C                     __pbssBANK0:
   142                           	opt stack 0
   143  00006C                     _good:
   144                           	opt stack 0
   145  00006C                     	ds	8
   146                           tblptru	equ	0xFF8
   147                           postinc0	equ	0xFEE
   148                           wreg	equ	0xFE8
   149                           
   150                           	psect	cstackBANK0
   151  000060                     __pcstackBANK0:
   152                           	opt stack 0
   153  000060                     ?_adcread:
   154                           	opt stack 0
   155  000060                     ?___wmul:
   156                           	opt stack 0
   157  000060                     uarttxch@ch:
   158                           	opt stack 0
   159  000060                     uartrx@rx:
   160                           	opt stack 0
   161  000060                     solinoidout@x:
   162                           	opt stack 0
   163  000060                     pneumaticout@x:
   164                           	opt stack 0
   165  000060                     ledout@x:
   166                           	opt stack 0
   167  000060                     uarttx@s:
   168                           	opt stack 0
   169  000060                     adcread@channel:
   170                           	opt stack 0
   171  000060                     delaysec@n:
   172                           	opt stack 0
   173  000060                     ___wmul@multiplier:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0x0
   177  000060                     	ds	2
   178  000062                     ??_delaysec:
   179  000062                     ??_solinoidout:
   180  000062                     ??_pneumaticout:
   181  000062                     ??_ledout:
   182  000062                     ??_adcread:
   183  000062                     ___wmul@multiplicand:
   184                           	opt stack 0
   185                           
   186                           ; 2 bytes @ 0x2
   187  000062                     	ds	1
   188  000063                     delaysec@i:
   189                           	opt stack 0
   190                           
   191                           ; 2 bytes @ 0x3
   192  000063                     	ds	1
   193  000064                     ___wmul@product:
   194                           	opt stack 0
   195                           
   196                           ; 2 bytes @ 0x4
   197  000064                     	ds	1
   198  000065                     ??_communication:
   199  000065                     
   200                           ; 0 bytes @ 0x5
   201  000065                     	ds	1
   202  000066                     ??_comparison:
   203  000066                     communication@rx:
   204                           	opt stack 0
   205  000066                     adcread@x:
   206                           	opt stack 0
   207                           
   208                           ; 2 bytes @ 0x6
   209  000066                     	ds	1
   210  000067                     ejectbad@i:
   211                           	opt stack 0
   212  000067                     ejectgood@i:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x7
   216  000067                     	ds	1
   217  000068                     
   218                           ; 0 bytes @ 0x8
   219  000068                     	ds	2
   220  00006A                     comparison@i:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0xA
   224  00006A                     	ds	2
   225  00006C                     tblptru	equ	0xFF8
   226                           postinc0	equ	0xFEE
   227                           wreg	equ	0xFE8
   228                           
   229                           ; 0 bytes @ 0xC
   230                           
   231                           	psect	cstackCOMRAM
   232  000040                     __pcstackCOMRAM:
   233                           	opt stack 0
   234  000040                     i2pneumaticout@x:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x0
   238  000040                     	ds	2
   239  000042                     ??i2_pneumaticout:
   240                           
   241                           ; 0 bytes @ 0x2
   242  000042                     	ds	2
   243  000044                     ??_ISR:
   244                           
   245                           ; 0 bytes @ 0x4
   246  000044                     	ds	14
   247                           tblptru	equ	0xFF8
   248                           postinc0	equ	0xFEE
   249                           wreg	equ	0xFE8
   250                           
   251 ;;
   252 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   253 ;;
   254 ;; *************** function _main *****************
   255 ;; Defined at:
   256 ;;		line 44 in file "main.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;		None               void
   263 ;; Registers used:
   264 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   270 ;;      Params:         0       0       0       0       0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0       0       0       0       0
   272 ;;      Temps:          0       0       0       0       0       0       0       0       0
   273 ;;      Totals:         0       0       0       0       0       0       0       0       0
   274 ;;Total ram usage:        0 bytes
   275 ;; Hardware stack levels required when called:    5
   276 ;; This function calls:
   277 ;;		_adcinit
   278 ;;		_communication
   279 ;;		_comparison
   280 ;;		_delaysec
   281 ;;		_ejectbad
   282 ;;		_ejectgood
   283 ;;		_ioinit
   284 ;;		_offsetread
   285 ;;		_test1
   286 ;;		_test2
   287 ;;		_timerinit
   288 ;;		_uartinit
   289 ;; This function is called by:
   290 ;;		Startup code after reset
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           	psect	text0
   295  0013BE                     __ptext0:
   296                           	opt stack 0
   297  0013BE                     _main:
   298                           	opt stack 26
   299                           
   300                           ;main.c: 46: ioinit();
   301                           
   302                           ;incstack = 0
   303  0013BE  EC29  F00B         	call	_ioinit	;wreg free
   304                           
   305                           ;main.c: 47: adcinit();
   306  0013C2  EC3F  F00B         	call	_adcinit	;wreg free
   307                           
   308                           ;main.c: 48: timerinit();
   309  0013C6  EC46  F00B         	call	_timerinit	;wreg free
   310                           
   311                           ;main.c: 49: uartinit();
   312  0013CA  EC15  F00B         	call	_uartinit	;wreg free
   313  0013CE                     l184:
   314  0013CE  BA80               	btfsc	3968,5,c	;volatile
   315  0013D0  D7FE               	goto	l184
   316                           
   317                           ;main.c: 53: communication();
   318  0013D2  EC3F  F005         	call	_communication	;wreg free
   319                           
   320                           ;main.c: 54: offsetread();
   321  0013D6  EC41  F00A         	call	_offsetread	;wreg free
   322  0013DA                     l1776:
   323  0013DA  508C               	movf	3980,w,c	;volatile
   324  0013DC  0BF0               	andlw	240
   325  0013DE  0AF0               	xorlw	240
   326  0013E0  B4D8               	btfsc	status,2,c
   327  0013E2  D7FB               	goto	l1776
   328                           
   329                           ;main.c: 56: test1();
   330  0013E4  EC42  F007         	call	_test1	;wreg free
   331                           
   332                           ;main.c: 57: delaysec(25);
   333  0013E8  0E00               	movlw	0
   334  0013EA  0100               	movlb	0	; () banked
   335  0013EC  6F61               	movwf	(delaysec@n+1)& (0+255),b
   336  0013EE  0E19               	movlw	25
   337  0013F0  6F60               	movwf	delaysec@n& (0+255),b
   338  0013F2  ECC6  F00A         	call	_delaysec	;wreg free
   339                           
   340                           ;main.c: 58: test2();
   341  0013F6  EC6C  F006         	call	_test2	;wreg free
   342                           
   343                           ;main.c: 59: comparison();
   344  0013FA  EC03  F004         	call	_comparison	;wreg free
   345  0013FE                     l190:
   346  0013FE  BA80               	btfsc	3968,5,c	;volatile
   347  001400  D7FE               	goto	l190
   348                           
   349                           ;main.c: 61: delaysec((int)glove.Air_eject_time_for_bad);
   350  001402  C03B  F060         	movff	_glove+4,delaysec@n
   351  001406  0100               	movlb	0	; () banked
   352  001408  6B61               	clrf	(delaysec@n+1)& (0+255),b
   353  00140A  ECC6  F00A         	call	_delaysec	;wreg free
   354                           
   355                           ;main.c: 62: ejectbad();
   356  00140E  EC78  F008         	call	_ejectbad	;wreg free
   357                           
   358                           ;main.c: 63: delaysec((int)glove.Air_eject_time_for_good);
   359  001412  C03A  F060         	movff	_glove+3,delaysec@n
   360  001416  0100               	movlb	0	; () banked
   361  001418  6B61               	clrf	(delaysec@n+1)& (0+255),b
   362  00141A  ECC6  F00A         	call	_delaysec	;wreg free
   363                           
   364                           ;main.c: 64: ejectgood();
   365  00141E  EC18  F008         	call	_ejectgood	;wreg free
   366  001422  D7D5               	goto	l184
   367  001424  D7FF               	goto	l196
   368  001426                     __end_of_main:
   369                           	opt stack 0
   370                           tblptru	equ	0xFF8
   371                           postinc0	equ	0xFEE
   372                           wreg	equ	0xFE8
   373                           status	equ	0xFD8
   374                           
   375 ;; *************** function _uartinit *****************
   376 ;; Defined at:
   377 ;;		line 5 in file "uart.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;		None               void
   384 ;; Registers used:
   385 ;;		wreg, status,2, status,0
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   391 ;;      Params:         0       0       0       0       0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0       0       0       0       0
   393 ;;      Temps:          0       0       0       0       0       0       0       0       0
   394 ;;      Totals:         0       0       0       0       0       0       0       0       0
   395 ;;Total ram usage:        0 bytes
   396 ;; Hardware stack levels used:    1
   397 ;; Hardware stack levels required when called:    2
   398 ;; This function calls:
   399 ;;		Nothing
   400 ;; This function is called by:
   401 ;;		_main
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           	psect	text1
   406  00162A                     __ptext1:
   407                           	opt stack 0
   408  00162A                     _uartinit:
   409                           	opt stack 28
   410                           
   411                           ;uart.c: 8: TRISCbits.RC6 = 0;
   412                           
   413                           ;incstack = 0
   414  00162A  9C94               	bcf	3988,6,c	;volatile
   415                           
   416                           ;uart.c: 9: TRISCbits.RC7 = 1;
   417  00162C  8E94               	bsf	3988,7,c	;volatile
   418                           
   419                           ;uart.c: 10: SPBRG=51;
   420  00162E  0E33               	movlw	51
   421  001630  6EAF               	movwf	4015,c	;volatile
   422                           
   423                           ;uart.c: 11: TXSTA|=(1<<5)|(0<<4)|(1<<2);
   424  001632  0E24               	movlw	36
   425  001634  12AC               	iorwf	4012,f,c	;volatile
   426                           
   427                           ;uart.c: 12: RCSTA=(1<<7)|(1<<4);
   428  001636  0E90               	movlw	144
   429  001638  6EAB               	movwf	4011,c	;volatile
   430                           
   431                           ;uart.c: 13: BAUDCON|=(0<<3);
   432  00163A  50B8               	movf	4024,w,c	;volatile
   433  00163C  0012               	return		;funcret
   434  00163E                     __end_of_uartinit:
   435                           	opt stack 0
   436                           tblptru	equ	0xFF8
   437                           postinc0	equ	0xFEE
   438                           wreg	equ	0xFE8
   439                           status	equ	0xFD8
   440                           
   441 ;; *************** function _timerinit *****************
   442 ;; Defined at:
   443 ;;		line 5 in file "timer.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;		None               void
   450 ;; Registers used:
   451 ;;		wreg, status,2
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   457 ;;      Params:         0       0       0       0       0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0       0       0       0       0
   459 ;;      Temps:          0       0       0       0       0       0       0       0       0
   460 ;;      Totals:         0       0       0       0       0       0       0       0       0
   461 ;;Total ram usage:        0 bytes
   462 ;; Hardware stack levels used:    1
   463 ;; Hardware stack levels required when called:    2
   464 ;; This function calls:
   465 ;;		Nothing
   466 ;; This function is called by:
   467 ;;		_main
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           	psect	text2
   472  00168C                     __ptext2:
   473                           	opt stack 0
   474  00168C                     _timerinit:
   475                           	opt stack 28
   476                           
   477                           ;timer.c: 7: T0CON=0x06;
   478                           
   479                           ;incstack = 0
   480  00168C  0E06               	movlw	6
   481  00168E  6ED5               	movwf	4053,c	;volatile
   482  001690  0012               	return		;funcret
   483  001692                     __end_of_timerinit:
   484                           	opt stack 0
   485                           tblptru	equ	0xFF8
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           status	equ	0xFD8
   489                           
   490 ;; *************** function _test2 *****************
   491 ;; Defined at:
   492 ;;		line 173 in file "main.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;		None               void
   499 ;; Registers used:
   500 ;;		wreg, status,2, status,0, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   506 ;;      Params:         0       0       0       0       0       0       0       0       0
   507 ;;      Locals:         0       0       0       0       0       0       0       0       0
   508 ;;      Temps:          0       0       0       0       0       0       0       0       0
   509 ;;      Totals:         0       0       0       0       0       0       0       0       0
   510 ;;Total ram usage:        0 bytes
   511 ;; Hardware stack levels used:    1
   512 ;; Hardware stack levels required when called:    4
   513 ;; This function calls:
   514 ;;		_adcread
   515 ;;		_delaysec
   516 ;;		_ledout
   517 ;;		_solinoidout
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text3
   524  000CD8                     __ptext3:
   525                           	opt stack 0
   526  000CD8                     _test2:
   527                           	opt stack 26
   528                           
   529                           ;main.c: 175: ledout(0);
   530                           
   531                           ;incstack = 0
   532  000CD8  0E00               	movlw	0
   533  000CDA  0100               	movlb	0	; () banked
   534  000CDC  6F61               	movwf	(ledout@x+1)& (0+255),b
   535  000CDE  0E00               	movlw	0
   536  000CE0  6F60               	movwf	ledout@x& (0+255),b
   537  000CE2  ECA6  F009         	call	_ledout	;wreg free
   538                           
   539                           ;main.c: 176: ledout(1);
   540  000CE6  0E00               	movlw	0
   541  000CE8  0100               	movlb	0	; () banked
   542  000CEA  6F61               	movwf	(ledout@x+1)& (0+255),b
   543  000CEC  0E01               	movlw	1
   544  000CEE  6F60               	movwf	ledout@x& (0+255),b
   545  000CF0  ECA6  F009         	call	_ledout	;wreg free
   546                           
   547                           ;main.c: 177: ledout(2);
   548  000CF4  0E00               	movlw	0
   549  000CF6  0100               	movlb	0	; () banked
   550  000CF8  6F61               	movwf	(ledout@x+1)& (0+255),b
   551  000CFA  0E02               	movlw	2
   552  000CFC  6F60               	movwf	ledout@x& (0+255),b
   553  000CFE  ECA6  F009         	call	_ledout	;wreg free
   554                           
   555                           ;main.c: 178: ledout(3);
   556  000D02  0E00               	movlw	0
   557  000D04  0100               	movlb	0	; () banked
   558  000D06  6F61               	movwf	(ledout@x+1)& (0+255),b
   559  000D08  0E03               	movlw	3
   560  000D0A  6F60               	movwf	ledout@x& (0+255),b
   561  000D0C  ECA6  F009         	call	_ledout	;wreg free
   562                           
   563                           ;main.c: 179: solinoidout(0);
   564  000D10  0E00               	movlw	0
   565  000D12  0100               	movlb	0	; () banked
   566  000D14  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   567  000D16  0E00               	movlw	0
   568  000D18  6F60               	movwf	solinoidout@x& (0+255),b
   569  000D1A  EC6D  F009         	call	_solinoidout	;wreg free
   570                           
   571                           ;main.c: 180: solinoidout(1);
   572  000D1E  0E00               	movlw	0
   573  000D20  0100               	movlb	0	; () banked
   574  000D22  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   575  000D24  0E01               	movlw	1
   576  000D26  6F60               	movwf	solinoidout@x& (0+255),b
   577  000D28  EC6D  F009         	call	_solinoidout	;wreg free
   578                           
   579                           ;main.c: 181: solinoidout(2);
   580  000D2C  0E00               	movlw	0
   581  000D2E  0100               	movlb	0	; () banked
   582  000D30  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   583  000D32  0E02               	movlw	2
   584  000D34  6F60               	movwf	solinoidout@x& (0+255),b
   585  000D36  EC6D  F009         	call	_solinoidout	;wreg free
   586                           
   587                           ;main.c: 182: solinoidout(3);
   588  000D3A  0E00               	movlw	0
   589  000D3C  0100               	movlb	0	; () banked
   590  000D3E  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   591  000D40  0E03               	movlw	3
   592  000D42  6F60               	movwf	solinoidout@x& (0+255),b
   593  000D44  EC6D  F009         	call	_solinoidout	;wreg free
   594                           
   595                           ;main.c: 183: delaysec(glove.Inflate_time_2);
   596  000D48  C039  F060         	movff	_glove+2,delaysec@n
   597  000D4C  0100               	movlb	0	; () banked
   598  000D4E  6B61               	clrf	(delaysec@n+1)& (0+255),b
   599  000D50  ECC6  F00A         	call	_delaysec	;wreg free
   600                           
   601                           ;main.c: 184: solinoidout(0);
   602  000D54  0E00               	movlw	0
   603  000D56  0100               	movlb	0	; () banked
   604  000D58  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   605  000D5A  0E00               	movlw	0
   606  000D5C  6F60               	movwf	solinoidout@x& (0+255),b
   607  000D5E  EC6D  F009         	call	_solinoidout	;wreg free
   608                           
   609                           ;main.c: 185: solinoidout(1);
   610  000D62  0E00               	movlw	0
   611  000D64  0100               	movlb	0	; () banked
   612  000D66  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   613  000D68  0E01               	movlw	1
   614  000D6A  6F60               	movwf	solinoidout@x& (0+255),b
   615  000D6C  EC6D  F009         	call	_solinoidout	;wreg free
   616                           
   617                           ;main.c: 186: solinoidout(2);
   618  000D70  0E00               	movlw	0
   619  000D72  0100               	movlb	0	; () banked
   620  000D74  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   621  000D76  0E02               	movlw	2
   622  000D78  6F60               	movwf	solinoidout@x& (0+255),b
   623  000D7A  EC6D  F009         	call	_solinoidout	;wreg free
   624                           
   625                           ;main.c: 187: solinoidout(3);
   626  000D7E  0E00               	movlw	0
   627  000D80  0100               	movlb	0	; () banked
   628  000D82  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   629  000D84  0E03               	movlw	3
   630  000D86  6F60               	movwf	solinoidout@x& (0+255),b
   631  000D88  EC6D  F009         	call	_solinoidout	;wreg free
   632                           
   633                           ;main.c: 188: {
   634                           ;main.c: 189: sensor[0].sensor_P3=adcread(0);
   635  000D8C  0E00               	movlw	0
   636  000D8E  0100               	movlb	0	; () banked
   637  000D90  6F61               	movwf	(adcread@channel+1)& (0+255),b
   638  000D92  0E00               	movlw	0
   639  000D94  6F60               	movwf	adcread@channel& (0+255),b
   640  000D96  EC6E  F00A         	call	_adcread	;wreg free
   641  000D9A  C060  F007         	movff	?_adcread,_sensor+6
   642  000D9E  C061  F008         	movff	?_adcread+1,_sensor+7
   643                           
   644                           ;main.c: 190: sensor[1].sensor_P3=adcread(1);
   645  000DA2  0E00               	movlw	0
   646  000DA4  0100               	movlb	0	; () banked
   647  000DA6  6F61               	movwf	(adcread@channel+1)& (0+255),b
   648  000DA8  0E01               	movlw	1
   649  000DAA  6F60               	movwf	adcread@channel& (0+255),b
   650  000DAC  EC6E  F00A         	call	_adcread	;wreg free
   651  000DB0  C060  F012         	movff	?_adcread,_sensor+17
   652  000DB4  C061  F013         	movff	?_adcread+1,_sensor+18
   653                           
   654                           ;main.c: 191: sensor[2].sensor_P3=adcread(2);
   655  000DB8  0E00               	movlw	0
   656  000DBA  0100               	movlb	0	; () banked
   657  000DBC  6F61               	movwf	(adcread@channel+1)& (0+255),b
   658  000DBE  0E02               	movlw	2
   659  000DC0  6F60               	movwf	adcread@channel& (0+255),b
   660  000DC2  EC6E  F00A         	call	_adcread	;wreg free
   661  000DC6  C060  F01D         	movff	?_adcread,_sensor+28
   662  000DCA  C061  F01E         	movff	?_adcread+1,_sensor+29
   663                           
   664                           ;main.c: 192: sensor[3].sensor_P3=adcread(3);
   665  000DCE  0E00               	movlw	0
   666  000DD0  0100               	movlb	0	; () banked
   667  000DD2  6F61               	movwf	(adcread@channel+1)& (0+255),b
   668  000DD4  0E03               	movlw	3
   669  000DD6  6F60               	movwf	adcread@channel& (0+255),b
   670  000DD8  EC6E  F00A         	call	_adcread	;wreg free
   671  000DDC  C060  F028         	movff	?_adcread,_sensor+39
   672  000DE0  C061  F029         	movff	?_adcread+1,_sensor+40
   673                           
   674                           ;main.c: 193: delaysec(25);
   675  000DE4  0E00               	movlw	0
   676  000DE6  0100               	movlb	0	; () banked
   677  000DE8  6F61               	movwf	(delaysec@n+1)& (0+255),b
   678  000DEA  0E19               	movlw	25
   679  000DEC  6F60               	movwf	delaysec@n& (0+255),b
   680  000DEE  ECC6  F00A         	call	_delaysec	;wreg free
   681                           
   682                           ;main.c: 194: sensor[0].sensor_P4=adcread(0);
   683  000DF2  0E00               	movlw	0
   684  000DF4  0100               	movlb	0	; () banked
   685  000DF6  6F61               	movwf	(adcread@channel+1)& (0+255),b
   686  000DF8  0E00               	movlw	0
   687  000DFA  6F60               	movwf	adcread@channel& (0+255),b
   688  000DFC  EC6E  F00A         	call	_adcread	;wreg free
   689  000E00  C060  F009         	movff	?_adcread,_sensor+8
   690  000E04  C061  F00A         	movff	?_adcread+1,_sensor+9
   691                           
   692                           ;main.c: 195: sensor[1].sensor_P4=adcread(1);
   693  000E08  0E00               	movlw	0
   694  000E0A  0100               	movlb	0	; () banked
   695  000E0C  6F61               	movwf	(adcread@channel+1)& (0+255),b
   696  000E0E  0E01               	movlw	1
   697  000E10  6F60               	movwf	adcread@channel& (0+255),b
   698  000E12  EC6E  F00A         	call	_adcread	;wreg free
   699  000E16  C060  F014         	movff	?_adcread,_sensor+19
   700  000E1A  C061  F015         	movff	?_adcread+1,_sensor+20
   701                           
   702                           ;main.c: 196: sensor[2].sensor_P4=adcread(2);
   703  000E1E  0E00               	movlw	0
   704  000E20  0100               	movlb	0	; () banked
   705  000E22  6F61               	movwf	(adcread@channel+1)& (0+255),b
   706  000E24  0E02               	movlw	2
   707  000E26  6F60               	movwf	adcread@channel& (0+255),b
   708  000E28  EC6E  F00A         	call	_adcread	;wreg free
   709  000E2C  C060  F01F         	movff	?_adcread,_sensor+30
   710  000E30  C061  F020         	movff	?_adcread+1,_sensor+31
   711                           
   712                           ;main.c: 197: sensor[3].sensor_P4=adcread(3);
   713  000E34  0E00               	movlw	0
   714  000E36  0100               	movlb	0	; () banked
   715  000E38  6F61               	movwf	(adcread@channel+1)& (0+255),b
   716  000E3A  0E03               	movlw	3
   717  000E3C  6F60               	movwf	adcread@channel& (0+255),b
   718  000E3E  EC6E  F00A         	call	_adcread	;wreg free
   719  000E42  C060  F02A         	movff	?_adcread,_sensor+41
   720  000E46  C061  F02B         	movff	?_adcread+1,_sensor+42
   721                           
   722                           ;main.c: 198: }
   723                           ;main.c: 199: ledout(0);
   724  000E4A  0E00               	movlw	0
   725  000E4C  0100               	movlb	0	; () banked
   726  000E4E  6F61               	movwf	(ledout@x+1)& (0+255),b
   727  000E50  0E00               	movlw	0
   728  000E52  6F60               	movwf	ledout@x& (0+255),b
   729  000E54  ECA6  F009         	call	_ledout	;wreg free
   730                           
   731                           ;main.c: 200: ledout(1);
   732  000E58  0E00               	movlw	0
   733  000E5A  0100               	movlb	0	; () banked
   734  000E5C  6F61               	movwf	(ledout@x+1)& (0+255),b
   735  000E5E  0E01               	movlw	1
   736  000E60  6F60               	movwf	ledout@x& (0+255),b
   737  000E62  ECA6  F009         	call	_ledout	;wreg free
   738                           
   739                           ;main.c: 201: ledout(2);
   740  000E66  0E00               	movlw	0
   741  000E68  0100               	movlb	0	; () banked
   742  000E6A  6F61               	movwf	(ledout@x+1)& (0+255),b
   743  000E6C  0E02               	movlw	2
   744  000E6E  6F60               	movwf	ledout@x& (0+255),b
   745  000E70  ECA6  F009         	call	_ledout	;wreg free
   746                           
   747                           ;main.c: 202: ledout(3);
   748  000E74  0E00               	movlw	0
   749  000E76  0100               	movlb	0	; () banked
   750  000E78  6F61               	movwf	(ledout@x+1)& (0+255),b
   751  000E7A  0E03               	movlw	3
   752  000E7C  6F60               	movwf	ledout@x& (0+255),b
   753  000E7E  ECA6  F009         	call	_ledout	;wreg free
   754  000E82  0012               	return		;funcret
   755  000E84                     __end_of_test2:
   756                           	opt stack 0
   757                           tblptru	equ	0xFF8
   758                           postinc0	equ	0xFEE
   759                           wreg	equ	0xFE8
   760                           status	equ	0xFD8
   761                           
   762 ;; *************** function _test1 *****************
   763 ;; Defined at:
   764 ;;		line 141 in file "main.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;		None               void
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   778 ;;      Params:         0       0       0       0       0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0       0       0       0       0
   780 ;;      Temps:          0       0       0       0       0       0       0       0       0
   781 ;;      Totals:         0       0       0       0       0       0       0       0       0
   782 ;;Total ram usage:        0 bytes
   783 ;; Hardware stack levels used:    1
   784 ;; Hardware stack levels required when called:    4
   785 ;; This function calls:
   786 ;;		_adcread
   787 ;;		_delaysec
   788 ;;		_ledout
   789 ;;		_solinoidout
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text4
   796  000E84                     __ptext4:
   797                           	opt stack 0
   798  000E84                     _test1:
   799                           	opt stack 26
   800                           
   801                           ;main.c: 143: ledout(0);
   802                           
   803                           ;incstack = 0
   804  000E84  0E00               	movlw	0
   805  000E86  0100               	movlb	0	; () banked
   806  000E88  6F61               	movwf	(ledout@x+1)& (0+255),b
   807  000E8A  0E00               	movlw	0
   808  000E8C  6F60               	movwf	ledout@x& (0+255),b
   809  000E8E  ECA6  F009         	call	_ledout	;wreg free
   810                           
   811                           ;main.c: 144: ledout(1);
   812  000E92  0E00               	movlw	0
   813  000E94  0100               	movlb	0	; () banked
   814  000E96  6F61               	movwf	(ledout@x+1)& (0+255),b
   815  000E98  0E01               	movlw	1
   816  000E9A  6F60               	movwf	ledout@x& (0+255),b
   817  000E9C  ECA6  F009         	call	_ledout	;wreg free
   818                           
   819                           ;main.c: 145: ledout(2);
   820  000EA0  0E00               	movlw	0
   821  000EA2  0100               	movlb	0	; () banked
   822  000EA4  6F61               	movwf	(ledout@x+1)& (0+255),b
   823  000EA6  0E02               	movlw	2
   824  000EA8  6F60               	movwf	ledout@x& (0+255),b
   825  000EAA  ECA6  F009         	call	_ledout	;wreg free
   826                           
   827                           ;main.c: 146: ledout(3);
   828  000EAE  0E00               	movlw	0
   829  000EB0  0100               	movlb	0	; () banked
   830  000EB2  6F61               	movwf	(ledout@x+1)& (0+255),b
   831  000EB4  0E03               	movlw	3
   832  000EB6  6F60               	movwf	ledout@x& (0+255),b
   833  000EB8  ECA6  F009         	call	_ledout	;wreg free
   834                           
   835                           ;main.c: 147: solinoidout(0);
   836  000EBC  0E00               	movlw	0
   837  000EBE  0100               	movlb	0	; () banked
   838  000EC0  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   839  000EC2  0E00               	movlw	0
   840  000EC4  6F60               	movwf	solinoidout@x& (0+255),b
   841  000EC6  EC6D  F009         	call	_solinoidout	;wreg free
   842                           
   843                           ;main.c: 148: solinoidout(1);
   844  000ECA  0E00               	movlw	0
   845  000ECC  0100               	movlb	0	; () banked
   846  000ECE  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   847  000ED0  0E01               	movlw	1
   848  000ED2  6F60               	movwf	solinoidout@x& (0+255),b
   849  000ED4  EC6D  F009         	call	_solinoidout	;wreg free
   850                           
   851                           ;main.c: 149: solinoidout(2);
   852  000ED8  0E00               	movlw	0
   853  000EDA  0100               	movlb	0	; () banked
   854  000EDC  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   855  000EDE  0E02               	movlw	2
   856  000EE0  6F60               	movwf	solinoidout@x& (0+255),b
   857  000EE2  EC6D  F009         	call	_solinoidout	;wreg free
   858                           
   859                           ;main.c: 150: solinoidout(3);
   860  000EE6  0E00               	movlw	0
   861  000EE8  0100               	movlb	0	; () banked
   862  000EEA  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   863  000EEC  0E03               	movlw	3
   864  000EEE  6F60               	movwf	solinoidout@x& (0+255),b
   865  000EF0  EC6D  F009         	call	_solinoidout	;wreg free
   866                           
   867                           ;main.c: 151: delaysec(glove.Inflate_time_1);
   868  000EF4  C038  F060         	movff	_glove+1,delaysec@n
   869  000EF8  0100               	movlb	0	; () banked
   870  000EFA  6B61               	clrf	(delaysec@n+1)& (0+255),b
   871  000EFC  ECC6  F00A         	call	_delaysec	;wreg free
   872                           
   873                           ;main.c: 152: solinoidout(0);
   874  000F00  0E00               	movlw	0
   875  000F02  0100               	movlb	0	; () banked
   876  000F04  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   877  000F06  0E00               	movlw	0
   878  000F08  6F60               	movwf	solinoidout@x& (0+255),b
   879  000F0A  EC6D  F009         	call	_solinoidout	;wreg free
   880                           
   881                           ;main.c: 153: solinoidout(1);
   882  000F0E  0E00               	movlw	0
   883  000F10  0100               	movlb	0	; () banked
   884  000F12  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   885  000F14  0E01               	movlw	1
   886  000F16  6F60               	movwf	solinoidout@x& (0+255),b
   887  000F18  EC6D  F009         	call	_solinoidout	;wreg free
   888                           
   889                           ;main.c: 154: solinoidout(2);
   890  000F1C  0E00               	movlw	0
   891  000F1E  0100               	movlb	0	; () banked
   892  000F20  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   893  000F22  0E02               	movlw	2
   894  000F24  6F60               	movwf	solinoidout@x& (0+255),b
   895  000F26  EC6D  F009         	call	_solinoidout	;wreg free
   896                           
   897                           ;main.c: 155: solinoidout(3);
   898  000F2A  0E00               	movlw	0
   899  000F2C  0100               	movlb	0	; () banked
   900  000F2E  6F61               	movwf	(solinoidout@x+1)& (0+255),b
   901  000F30  0E03               	movlw	3
   902  000F32  6F60               	movwf	solinoidout@x& (0+255),b
   903  000F34  EC6D  F009         	call	_solinoidout	;wreg free
   904                           
   905                           ;main.c: 156: {
   906                           ;main.c: 157: sensor[0].sensor_P1=adcread(0);
   907  000F38  0E00               	movlw	0
   908  000F3A  0100               	movlb	0	; () banked
   909  000F3C  6F61               	movwf	(adcread@channel+1)& (0+255),b
   910  000F3E  0E00               	movlw	0
   911  000F40  6F60               	movwf	adcread@channel& (0+255),b
   912  000F42  EC6E  F00A         	call	_adcread	;wreg free
   913  000F46  C060  F003         	movff	?_adcread,_sensor+2
   914  000F4A  C061  F004         	movff	?_adcread+1,_sensor+3
   915                           
   916                           ;main.c: 158: sensor[1].sensor_P1=adcread(1);
   917  000F4E  0E00               	movlw	0
   918  000F50  0100               	movlb	0	; () banked
   919  000F52  6F61               	movwf	(adcread@channel+1)& (0+255),b
   920  000F54  0E01               	movlw	1
   921  000F56  6F60               	movwf	adcread@channel& (0+255),b
   922  000F58  EC6E  F00A         	call	_adcread	;wreg free
   923  000F5C  C060  F00E         	movff	?_adcread,_sensor+13
   924  000F60  C061  F00F         	movff	?_adcread+1,_sensor+14
   925                           
   926                           ;main.c: 159: sensor[2].sensor_P1=adcread(2);
   927  000F64  0E00               	movlw	0
   928  000F66  0100               	movlb	0	; () banked
   929  000F68  6F61               	movwf	(adcread@channel+1)& (0+255),b
   930  000F6A  0E02               	movlw	2
   931  000F6C  6F60               	movwf	adcread@channel& (0+255),b
   932  000F6E  EC6E  F00A         	call	_adcread	;wreg free
   933  000F72  C060  F019         	movff	?_adcread,_sensor+24
   934  000F76  C061  F01A         	movff	?_adcread+1,_sensor+25
   935                           
   936                           ;main.c: 160: sensor[3].sensor_P1=adcread(3);
   937  000F7A  0E00               	movlw	0
   938  000F7C  0100               	movlb	0	; () banked
   939  000F7E  6F61               	movwf	(adcread@channel+1)& (0+255),b
   940  000F80  0E03               	movlw	3
   941  000F82  6F60               	movwf	adcread@channel& (0+255),b
   942  000F84  EC6E  F00A         	call	_adcread	;wreg free
   943  000F88  C060  F024         	movff	?_adcread,_sensor+35
   944  000F8C  C061  F025         	movff	?_adcread+1,_sensor+36
   945                           
   946                           ;main.c: 161: delaysec(25);
   947  000F90  0E00               	movlw	0
   948  000F92  0100               	movlb	0	; () banked
   949  000F94  6F61               	movwf	(delaysec@n+1)& (0+255),b
   950  000F96  0E19               	movlw	25
   951  000F98  6F60               	movwf	delaysec@n& (0+255),b
   952  000F9A  ECC6  F00A         	call	_delaysec	;wreg free
   953                           
   954                           ;main.c: 162: sensor[0].sensor_P2=adcread(0);
   955  000F9E  0E00               	movlw	0
   956  000FA0  0100               	movlb	0	; () banked
   957  000FA2  6F61               	movwf	(adcread@channel+1)& (0+255),b
   958  000FA4  0E00               	movlw	0
   959  000FA6  6F60               	movwf	adcread@channel& (0+255),b
   960  000FA8  EC6E  F00A         	call	_adcread	;wreg free
   961  000FAC  C060  F005         	movff	?_adcread,_sensor+4
   962  000FB0  C061  F006         	movff	?_adcread+1,_sensor+5
   963                           
   964                           ;main.c: 163: sensor[1].sensor_P2=adcread(1);
   965  000FB4  0E00               	movlw	0
   966  000FB6  0100               	movlb	0	; () banked
   967  000FB8  6F61               	movwf	(adcread@channel+1)& (0+255),b
   968  000FBA  0E01               	movlw	1
   969  000FBC  6F60               	movwf	adcread@channel& (0+255),b
   970  000FBE  EC6E  F00A         	call	_adcread	;wreg free
   971  000FC2  C060  F010         	movff	?_adcread,_sensor+15
   972  000FC6  C061  F011         	movff	?_adcread+1,_sensor+16
   973                           
   974                           ;main.c: 164: sensor[2].sensor_P2=adcread(2);
   975  000FCA  0E00               	movlw	0
   976  000FCC  0100               	movlb	0	; () banked
   977  000FCE  6F61               	movwf	(adcread@channel+1)& (0+255),b
   978  000FD0  0E02               	movlw	2
   979  000FD2  6F60               	movwf	adcread@channel& (0+255),b
   980  000FD4  EC6E  F00A         	call	_adcread	;wreg free
   981  000FD8  C060  F01B         	movff	?_adcread,_sensor+26
   982  000FDC  C061  F01C         	movff	?_adcread+1,_sensor+27
   983                           
   984                           ;main.c: 165: sensor[3].sensor_P2=adcread(3);
   985  000FE0  0E00               	movlw	0
   986  000FE2  0100               	movlb	0	; () banked
   987  000FE4  6F61               	movwf	(adcread@channel+1)& (0+255),b
   988  000FE6  0E03               	movlw	3
   989  000FE8  6F60               	movwf	adcread@channel& (0+255),b
   990  000FEA  EC6E  F00A         	call	_adcread	;wreg free
   991  000FEE  C060  F026         	movff	?_adcread,_sensor+37
   992  000FF2  C061  F027         	movff	?_adcread+1,_sensor+38
   993                           
   994                           ;main.c: 166: }
   995                           ;main.c: 167: ledout(0);
   996  000FF6  0E00               	movlw	0
   997  000FF8  0100               	movlb	0	; () banked
   998  000FFA  6F61               	movwf	(ledout@x+1)& (0+255),b
   999  000FFC  0E00               	movlw	0
  1000  000FFE  6F60               	movwf	ledout@x& (0+255),b
  1001  001000  ECA6  F009         	call	_ledout	;wreg free
  1002                           
  1003                           ;main.c: 168: ledout(1);
  1004  001004  0E00               	movlw	0
  1005  001006  0100               	movlb	0	; () banked
  1006  001008  6F61               	movwf	(ledout@x+1)& (0+255),b
  1007  00100A  0E01               	movlw	1
  1008  00100C  6F60               	movwf	ledout@x& (0+255),b
  1009  00100E  ECA6  F009         	call	_ledout	;wreg free
  1010                           
  1011                           ;main.c: 169: ledout(2);
  1012  001012  0E00               	movlw	0
  1013  001014  0100               	movlb	0	; () banked
  1014  001016  6F61               	movwf	(ledout@x+1)& (0+255),b
  1015  001018  0E02               	movlw	2
  1016  00101A  6F60               	movwf	ledout@x& (0+255),b
  1017  00101C  ECA6  F009         	call	_ledout	;wreg free
  1018                           
  1019                           ;main.c: 170: ledout(3);
  1020  001020  0E00               	movlw	0
  1021  001022  0100               	movlb	0	; () banked
  1022  001024  6F61               	movwf	(ledout@x+1)& (0+255),b
  1023  001026  0E03               	movlw	3
  1024  001028  6F60               	movwf	ledout@x& (0+255),b
  1025  00102A  ECA6  F009         	call	_ledout	;wreg free
  1026  00102E  0012               	return		;funcret
  1027  001030                     __end_of_test1:
  1028                           	opt stack 0
  1029                           tblptru	equ	0xFF8
  1030                           postinc0	equ	0xFEE
  1031                           wreg	equ	0xFE8
  1032                           status	equ	0xFD8
  1033                           
  1034 ;; *************** function _offsetread *****************
  1035 ;; Defined at:
  1036 ;;		line 205 in file "main.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;		None               void
  1043 ;; Registers used:
  1044 ;;		wreg, status,2, status,0, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1050 ;;      Params:         0       0       0       0       0       0       0       0       0
  1051 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1053 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1054 ;;Total ram usage:        0 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; Hardware stack levels required when called:    3
  1057 ;; This function calls:
  1058 ;;		_adcread
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text5
  1065  001482                     __ptext5:
  1066                           	opt stack 0
  1067  001482                     _offsetread:
  1068                           	opt stack 27
  1069                           
  1070                           ;main.c: 207: sensor[0].sensor_offset=adcread(0);
  1071                           
  1072                           ;incstack = 0
  1073  001482  0E00               	movlw	0
  1074  001484  0100               	movlb	0	; () banked
  1075  001486  6F61               	movwf	(adcread@channel+1)& (0+255),b
  1076  001488  0E00               	movlw	0
  1077  00148A  6F60               	movwf	adcread@channel& (0+255),b
  1078  00148C  EC6E  F00A         	call	_adcread	;wreg free
  1079  001490  C060  F001         	movff	?_adcread,_sensor
  1080  001494  C061  F002         	movff	?_adcread+1,_sensor+1
  1081                           
  1082                           ;main.c: 208: sensor[1].sensor_offset=adcread(1);
  1083  001498  0E00               	movlw	0
  1084  00149A  0100               	movlb	0	; () banked
  1085  00149C  6F61               	movwf	(adcread@channel+1)& (0+255),b
  1086  00149E  0E01               	movlw	1
  1087  0014A0  6F60               	movwf	adcread@channel& (0+255),b
  1088  0014A2  EC6E  F00A         	call	_adcread	;wreg free
  1089  0014A6  C060  F00C         	movff	?_adcread,_sensor+11
  1090  0014AA  C061  F00D         	movff	?_adcread+1,_sensor+12
  1091                           
  1092                           ;main.c: 209: sensor[2].sensor_offset=adcread(2);
  1093  0014AE  0E00               	movlw	0
  1094  0014B0  0100               	movlb	0	; () banked
  1095  0014B2  6F61               	movwf	(adcread@channel+1)& (0+255),b
  1096  0014B4  0E02               	movlw	2
  1097  0014B6  6F60               	movwf	adcread@channel& (0+255),b
  1098  0014B8  EC6E  F00A         	call	_adcread	;wreg free
  1099  0014BC  C060  F017         	movff	?_adcread,_sensor+22
  1100  0014C0  C061  F018         	movff	?_adcread+1,_sensor+23
  1101                           
  1102                           ;main.c: 210: sensor[3].sensor_offset=adcread(3);
  1103  0014C4  0E00               	movlw	0
  1104  0014C6  0100               	movlb	0	; () banked
  1105  0014C8  6F61               	movwf	(adcread@channel+1)& (0+255),b
  1106  0014CA  0E03               	movlw	3
  1107  0014CC  6F60               	movwf	adcread@channel& (0+255),b
  1108  0014CE  EC6E  F00A         	call	_adcread	;wreg free
  1109  0014D2  C060  F022         	movff	?_adcread,_sensor+33
  1110  0014D6  C061  F023         	movff	?_adcread+1,_sensor+34
  1111  0014DA  0012               	return		;funcret
  1112  0014DC                     __end_of_offsetread:
  1113                           	opt stack 0
  1114                           tblptru	equ	0xFF8
  1115                           postinc0	equ	0xFEE
  1116                           wreg	equ	0xFE8
  1117                           status	equ	0xFD8
  1118                           
  1119 ;; *************** function _adcread *****************
  1120 ;; Defined at:
  1121 ;;		line 13 in file "adc.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  channel         2    0[BANK0 ] int 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;  x               2    6[BANK0 ] int 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  2    0[BANK0 ] int 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1135 ;;      Params:         0       2       0       0       0       0       0       0       0
  1136 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1137 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1138 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1139 ;;Total ram usage:        8 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    2
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		_test1
  1146 ;;		_test2
  1147 ;;		_offsetread
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text6
  1152  0014DC                     __ptext6:
  1153                           	opt stack 0
  1154  0014DC                     _adcread:
  1155                           	opt stack 27
  1156                           
  1157                           ;adc.c: 15: int x;
  1158                           ;adc.c: 16: ADCON0=0X00;
  1159                           
  1160                           ;incstack = 0
  1161  0014DC  0E00               	movlw	0
  1162  0014DE  6EC2               	movwf	4034,c	;volatile
  1163                           
  1164                           ;adc.c: 17: ADCON0|=channel<<2;
  1165  0014E0  0100               	movlb	0	; () banked
  1166  0014E2  4560               	rlncf	adcread@channel& (0+255),w,b
  1167  0014E4  46E8               	rlncf	wreg,f,c
  1168  0014E6  0BFC               	andlw	252
  1169  0014E8  12C2               	iorwf	4034,f,c	;volatile
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;adc.c: 18: ADCON0|=(1<<0);
  1173  0014EA  80C2               	bsf	4034,0,c	;volatile
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;adc.c: 19: ADCON0|=(1<<1);
  1177  0014EC  82C2               	bsf	4034,1,c	;volatile
  1178  0014EE                     l113:
  1179  0014EE  B2C2               	btfsc	4034,1,c	;volatile
  1180  0014F0  D7FE               	goto	l113
  1181                           
  1182                           ;adc.c: 21: x=ADRESH;
  1183  0014F2  CFC4 F066          	movff	4036,adcread@x	;volatile
  1184  0014F6  0100               	movlb	0	; () banked
  1185  0014F8  6B67               	clrf	(adcread@x+1)& (0+255),b
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;adc.c: 22: pres=ADRESL|(x<<7);
  1189  0014FA  C066  F062         	movff	adcread@x,??_adcread
  1190  0014FE  C067  F063         	movff	adcread@x+1,??_adcread+1
  1191  001502  0E07               	movlw	7
  1192  001504                     u1215:
  1193  001504  90D8               	bcf	status,0,c
  1194  001506  0100               	movlb	0	; () banked
  1195  001508  3762               	rlcf	??_adcread& (0+255),f,b
  1196  00150A  3763               	rlcf	(??_adcread+1)& (0+255),f,b
  1197  00150C  2EE8               	decfsz	wreg,f,c
  1198  00150E  D7FA               	goto	u1215
  1199  001510  50C3               	movf	4035,w,c	;volatile
  1200  001512  0100               	movlb	0	; () banked
  1201  001514  6F64               	movwf	(??_adcread+2)& (0+255),b
  1202  001516  6B65               	clrf	(??_adcread+3)& (0+255),b
  1203  001518  0100               	movlb	0	; () banked
  1204  00151A  5162               	movf	??_adcread& (0+255),w,b
  1205  00151C  0100               	movlb	0	; () banked
  1206  00151E  1164               	iorwf	(??_adcread+2)& (0+255),w,b
  1207  001520  6E3E               	movwf	_pres,c
  1208  001522  0100               	movlb	0	; () banked
  1209  001524  5163               	movf	(??_adcread+1)& (0+255),w,b
  1210  001526  0100               	movlb	0	; () banked
  1211  001528  1165               	iorwf	(??_adcread+3)& (0+255),w,b
  1212  00152A  6E3F               	movwf	_pres+1,c
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;adc.c: 23: return pres;
  1216  00152C  C03E  F060         	movff	_pres,?_adcread
  1217  001530  C03F  F061         	movff	_pres+1,?_adcread+1
  1218  001534  0012               	return	
  1219  001536                     __end_of_adcread:
  1220                           	opt stack 0
  1221                           tblptru	equ	0xFF8
  1222                           postinc0	equ	0xFEE
  1223                           wreg	equ	0xFE8
  1224                           status	equ	0xFD8
  1225                           
  1226 ;; *************** function _ioinit *****************
  1227 ;; Defined at:
  1228 ;;		line 3 in file "ioport.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;		None               void
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1242 ;;      Params:         0       0       0       0       0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1245 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1246 ;;Total ram usage:        0 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    2
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text7
  1257  001652                     __ptext7:
  1258                           	opt stack 0
  1259  001652                     _ioinit:
  1260                           	opt stack 28
  1261                           
  1262                           ;ioport.c: 5: TRISB =(0XF0) ;
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;incstack = 0
  1266  001652  0EF0               	movlw	240
  1267  001654  6E93               	movwf	3987,c	;volatile
  1268                           
  1269                           ;ioport.c: 6: TRISD =(0X00) ;
  1270  001656  0E00               	movlw	0
  1271  001658  6E95               	movwf	3989,c	;volatile
  1272                           
  1273                           ;ioport.c: 7: TRISC =(0XF0) ;
  1274  00165A  0EF0               	movlw	240
  1275  00165C  6E94               	movwf	3988,c	;volatile
  1276                           
  1277                           ;ioport.c: 8: TRISA|=(1<<5) ;
  1278  00165E  8A92               	bsf	3986,5,c	;volatile
  1279  001660  0012               	return		;funcret
  1280  001662                     __end_of_ioinit:
  1281                           	opt stack 0
  1282                           tblptru	equ	0xFF8
  1283                           postinc0	equ	0xFEE
  1284                           wreg	equ	0xFE8
  1285                           status	equ	0xFD8
  1286                           
  1287 ;; *************** function _ejectgood *****************
  1288 ;; Defined at:
  1289 ;;		line 232 in file "main.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  i               2    7[BANK0 ] int 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;		None               void
  1296 ;; Registers used:
  1297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0
  1304 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1305 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1306 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1307 ;;Total ram usage:        4 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    4
  1310 ;; This function calls:
  1311 ;;		_delaysec
  1312 ;;		_pneumaticout
  1313 ;;		_solinoidout
  1314 ;; This function is called by:
  1315 ;;		_main
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text8
  1320  001030                     __ptext8:
  1321                           	opt stack 0
  1322  001030                     _ejectgood:
  1323                           	opt stack 26
  1324                           
  1325                           ;main.c: 234: int i;
  1326                           ;main.c: 235: for(i=0;i<4;i++)
  1327                           
  1328                           ;incstack = 0
  1329  001030  0E00               	movlw	0
  1330  001032  0100               	movlb	0	; () banked
  1331  001034  6F68               	movwf	(ejectgood@i+1)& (0+255),b
  1332  001036  0E00               	movlw	0
  1333  001038  6F67               	movwf	ejectgood@i& (0+255),b
  1334  00103A                     l1738:
  1335                           
  1336                           ; BSR set to: 0
  1337  00103A  0100               	movlb	0	; () banked
  1338  00103C  BF68               	btfsc	(ejectgood@i+1)& (0+255),7,b
  1339  00103E  D008               	goto	l1742
  1340  001040  0100               	movlb	0	; () banked
  1341  001042  5168               	movf	(ejectgood@i+1)& (0+255),w,b
  1342  001044  E124               	bnz	l1750
  1343  001046  0E04               	movlw	4
  1344  001048  0100               	movlb	0	; () banked
  1345  00104A  5D67               	subwf	ejectgood@i& (0+255),w,b
  1346  00104C  B0D8               	btfsc	status,0,c
  1347  00104E  D01F               	goto	l1750
  1348  001050                     l1742:
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;main.c: 236: {
  1352                           ;main.c: 237: if(good[i]==1)
  1353  001050  90D8               	bcf	status,0,c
  1354  001052  0100               	movlb	0	; () banked
  1355  001054  3567               	rlcf	ejectgood@i& (0+255),w,b
  1356  001056  6ED9               	movwf	fsr2l,c
  1357  001058  0100               	movlb	0	; () banked
  1358  00105A  3568               	rlcf	(ejectgood@i+1)& (0+255),w,b
  1359  00105C  6EDA               	movwf	fsr2h,c
  1360  00105E  0E6C               	movlw	low _good
  1361  001060  26D9               	addwf	fsr2l,f,c
  1362  001062  0E00               	movlw	high _good
  1363  001064  22DA               	addwfc	fsr2h,f,c
  1364  001066  04DE               	decf	postinc2,w,c
  1365  001068  10DE               	iorwf	postinc2,w,c
  1366  00106A  A4D8               	btfss	status,2,c
  1367  00106C  D00C               	goto	l1746
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;main.c: 238: {
  1371                           ;main.c: 239: pneumaticout(i);
  1372  00106E  C067  F060         	movff	ejectgood@i,pneumaticout@x
  1373  001072  C068  F061         	movff	ejectgood@i+1,pneumaticout@x+1
  1374  001076  EC2F  F009         	call	_pneumaticout	;wreg free
  1375                           
  1376                           ;main.c: 240: solinoidout(i);
  1377  00107A  C067  F060         	movff	ejectgood@i,solinoidout@x
  1378  00107E  C068  F061         	movff	ejectgood@i+1,solinoidout@x+1
  1379  001082  EC6D  F009         	call	_solinoidout	;wreg free
  1380  001086                     l1746:
  1381  001086  0100               	movlb	0	; () banked
  1382  001088  4B67               	infsnz	ejectgood@i& (0+255),f,b
  1383  00108A  2B68               	incf	(ejectgood@i+1)& (0+255),f,b
  1384  00108C  D7D6               	goto	l1738
  1385  00108E                     l1750:
  1386                           
  1387                           ; BSR set to: 0
  1388                           ;main.c: 241: }
  1389                           ;main.c: 242: }
  1390                           ;main.c: 243: delaysec(1);
  1391  00108E  0E00               	movlw	0
  1392  001090  0100               	movlb	0	; () banked
  1393  001092  6F61               	movwf	(delaysec@n+1)& (0+255),b
  1394  001094  0E01               	movlw	1
  1395  001096  6F60               	movwf	delaysec@n& (0+255),b
  1396  001098  ECC6  F00A         	call	_delaysec	;wreg free
  1397                           
  1398                           ;main.c: 244: for(i=0;i<4;i++)
  1399  00109C  0E00               	movlw	0
  1400  00109E  0100               	movlb	0	; () banked
  1401  0010A0  6F68               	movwf	(ejectgood@i+1)& (0+255),b
  1402  0010A2  0E00               	movlw	0
  1403  0010A4  6F67               	movwf	ejectgood@i& (0+255),b
  1404  0010A6                     l1754:
  1405                           
  1406                           ; BSR set to: 0
  1407  0010A6  0100               	movlb	0	; () banked
  1408  0010A8  BF68               	btfsc	(ejectgood@i+1)& (0+255),7,b
  1409  0010AA  D008               	goto	l1758
  1410  0010AC  0100               	movlb	0	; () banked
  1411  0010AE  5168               	movf	(ejectgood@i+1)& (0+255),w,b
  1412  0010B0  E11E               	bnz	l234
  1413  0010B2  0E04               	movlw	4
  1414  0010B4  0100               	movlb	0	; () banked
  1415  0010B6  5D67               	subwf	ejectgood@i& (0+255),w,b
  1416  0010B8  B0D8               	btfsc	status,0,c
  1417  0010BA  0012               	return	
  1418  0010BC                     l1758:
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;main.c: 245: {
  1422                           ;main.c: 246: if(good[i]==1)
  1423  0010BC  90D8               	bcf	status,0,c
  1424  0010BE  0100               	movlb	0	; () banked
  1425  0010C0  3567               	rlcf	ejectgood@i& (0+255),w,b
  1426  0010C2  6ED9               	movwf	fsr2l,c
  1427  0010C4  0100               	movlb	0	; () banked
  1428  0010C6  3568               	rlcf	(ejectgood@i+1)& (0+255),w,b
  1429  0010C8  6EDA               	movwf	fsr2h,c
  1430  0010CA  0E6C               	movlw	low _good
  1431  0010CC  26D9               	addwf	fsr2l,f,c
  1432  0010CE  0E00               	movlw	high _good
  1433  0010D0  22DA               	addwfc	fsr2h,f,c
  1434  0010D2  04DE               	decf	postinc2,w,c
  1435  0010D4  10DE               	iorwf	postinc2,w,c
  1436  0010D6  A4D8               	btfss	status,2,c
  1437  0010D8  D006               	goto	l1762
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;main.c: 247: solinoidout(i);
  1441  0010DA  C067  F060         	movff	ejectgood@i,solinoidout@x
  1442  0010DE  C068  F061         	movff	ejectgood@i+1,solinoidout@x+1
  1443  0010E2  EC6D  F009         	call	_solinoidout	;wreg free
  1444  0010E6                     l1762:
  1445  0010E6  0100               	movlb	0	; () banked
  1446  0010E8  4B67               	infsnz	ejectgood@i& (0+255),f,b
  1447  0010EA  2B68               	incf	(ejectgood@i+1)& (0+255),f,b
  1448  0010EC  D7DC               	goto	l1754
  1449  0010EE                     l234:
  1450                           
  1451                           ; BSR set to: 0
  1452  0010EE  0012               	return		;funcret
  1453  0010F0                     __end_of_ejectgood:
  1454                           	opt stack 0
  1455                           tblptru	equ	0xFF8
  1456                           postinc0	equ	0xFEE
  1457                           wreg	equ	0xFE8
  1458                           postinc2	equ	0xFDE
  1459                           fsr2h	equ	0xFDA
  1460                           fsr2l	equ	0xFD9
  1461                           status	equ	0xFD8
  1462                           
  1463 ;; *************** function _ejectbad *****************
  1464 ;; Defined at:
  1465 ;;		line 213 in file "main.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;		None
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  i               2    7[BANK0 ] int 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;		None               void
  1472 ;; Registers used:
  1473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1479 ;;      Params:         0       0       0       0       0       0       0       0       0
  1480 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1481 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1482 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1483 ;;Total ram usage:        4 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    4
  1486 ;; This function calls:
  1487 ;;		_delaysec
  1488 ;;		_pneumaticout
  1489 ;;		_solinoidout
  1490 ;; This function is called by:
  1491 ;;		_main
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text9
  1496  0010F0                     __ptext9:
  1497                           	opt stack 0
  1498  0010F0                     _ejectbad:
  1499                           	opt stack 26
  1500                           
  1501                           ;main.c: 215: int i;
  1502                           ;main.c: 216: for(i=0;i<4;i++)
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;incstack = 0
  1506  0010F0  0E00               	movlw	0
  1507  0010F2  0100               	movlb	0	; () banked
  1508  0010F4  6F68               	movwf	(ejectbad@i+1)& (0+255),b
  1509  0010F6  0E00               	movlw	0
  1510  0010F8  6F67               	movwf	ejectbad@i& (0+255),b
  1511  0010FA                     l1708:
  1512                           
  1513                           ; BSR set to: 0
  1514  0010FA  0100               	movlb	0	; () banked
  1515  0010FC  BF68               	btfsc	(ejectbad@i+1)& (0+255),7,b
  1516  0010FE  D008               	goto	l1712
  1517  001100  0100               	movlb	0	; () banked
  1518  001102  5168               	movf	(ejectbad@i+1)& (0+255),w,b
  1519  001104  E124               	bnz	l1720
  1520  001106  0E04               	movlw	4
  1521  001108  0100               	movlb	0	; () banked
  1522  00110A  5D67               	subwf	ejectbad@i& (0+255),w,b
  1523  00110C  B0D8               	btfsc	status,0,c
  1524  00110E  D01F               	goto	l1720
  1525  001110                     l1712:
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;main.c: 217: {
  1529                           ;main.c: 218: if(good[i]==0)
  1530  001110  90D8               	bcf	status,0,c
  1531  001112  0100               	movlb	0	; () banked
  1532  001114  3567               	rlcf	ejectbad@i& (0+255),w,b
  1533  001116  6ED9               	movwf	fsr2l,c
  1534  001118  0100               	movlb	0	; () banked
  1535  00111A  3568               	rlcf	(ejectbad@i+1)& (0+255),w,b
  1536  00111C  6EDA               	movwf	fsr2h,c
  1537  00111E  0E6C               	movlw	low _good
  1538  001120  26D9               	addwf	fsr2l,f,c
  1539  001122  0E00               	movlw	high _good
  1540  001124  22DA               	addwfc	fsr2h,f,c
  1541  001126  50DE               	movf	postinc2,w,c
  1542  001128  10DE               	iorwf	postinc2,w,c
  1543  00112A  A4D8               	btfss	status,2,c
  1544  00112C  D00C               	goto	l1716
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;main.c: 219: {
  1548                           ;main.c: 220: pneumaticout(i);
  1549  00112E  C067  F060         	movff	ejectbad@i,pneumaticout@x
  1550  001132  C068  F061         	movff	ejectbad@i+1,pneumaticout@x+1
  1551  001136  EC2F  F009         	call	_pneumaticout	;wreg free
  1552                           
  1553                           ;main.c: 221: solinoidout(i);
  1554  00113A  C067  F060         	movff	ejectbad@i,solinoidout@x
  1555  00113E  C068  F061         	movff	ejectbad@i+1,solinoidout@x+1
  1556  001142  EC6D  F009         	call	_solinoidout	;wreg free
  1557  001146                     l1716:
  1558  001146  0100               	movlb	0	; () banked
  1559  001148  4B67               	infsnz	ejectbad@i& (0+255),f,b
  1560  00114A  2B68               	incf	(ejectbad@i+1)& (0+255),f,b
  1561  00114C  D7D6               	goto	l1708
  1562  00114E                     l1720:
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;main.c: 222: }
  1566                           ;main.c: 223: }
  1567                           ;main.c: 224: delaysec(1);
  1568  00114E  0E00               	movlw	0
  1569  001150  0100               	movlb	0	; () banked
  1570  001152  6F61               	movwf	(delaysec@n+1)& (0+255),b
  1571  001154  0E01               	movlw	1
  1572  001156  6F60               	movwf	delaysec@n& (0+255),b
  1573  001158  ECC6  F00A         	call	_delaysec	;wreg free
  1574                           
  1575                           ;main.c: 225: for(i=0;i<4;i++)
  1576  00115C  0E00               	movlw	0
  1577  00115E  0100               	movlb	0	; () banked
  1578  001160  6F68               	movwf	(ejectbad@i+1)& (0+255),b
  1579  001162  0E00               	movlw	0
  1580  001164  6F67               	movwf	ejectbad@i& (0+255),b
  1581  001166                     l1724:
  1582                           
  1583                           ; BSR set to: 0
  1584  001166  0100               	movlb	0	; () banked
  1585  001168  BF68               	btfsc	(ejectbad@i+1)& (0+255),7,b
  1586  00116A  D008               	goto	l1728
  1587  00116C  0100               	movlb	0	; () banked
  1588  00116E  5168               	movf	(ejectbad@i+1)& (0+255),w,b
  1589  001170  E11E               	bnz	l225
  1590  001172  0E04               	movlw	4
  1591  001174  0100               	movlb	0	; () banked
  1592  001176  5D67               	subwf	ejectbad@i& (0+255),w,b
  1593  001178  B0D8               	btfsc	status,0,c
  1594  00117A  0012               	return	
  1595  00117C                     l1728:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;main.c: 226: {
  1599                           ;main.c: 227: if(good[i]==0)
  1600  00117C  90D8               	bcf	status,0,c
  1601  00117E  0100               	movlb	0	; () banked
  1602  001180  3567               	rlcf	ejectbad@i& (0+255),w,b
  1603  001182  6ED9               	movwf	fsr2l,c
  1604  001184  0100               	movlb	0	; () banked
  1605  001186  3568               	rlcf	(ejectbad@i+1)& (0+255),w,b
  1606  001188  6EDA               	movwf	fsr2h,c
  1607  00118A  0E6C               	movlw	low _good
  1608  00118C  26D9               	addwf	fsr2l,f,c
  1609  00118E  0E00               	movlw	high _good
  1610  001190  22DA               	addwfc	fsr2h,f,c
  1611  001192  50DE               	movf	postinc2,w,c
  1612  001194  10DE               	iorwf	postinc2,w,c
  1613  001196  A4D8               	btfss	status,2,c
  1614  001198  D006               	goto	l1732
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;main.c: 228: solinoidout(i);
  1618  00119A  C067  F060         	movff	ejectbad@i,solinoidout@x
  1619  00119E  C068  F061         	movff	ejectbad@i+1,solinoidout@x+1
  1620  0011A2  EC6D  F009         	call	_solinoidout	;wreg free
  1621  0011A6                     l1732:
  1622  0011A6  0100               	movlb	0	; () banked
  1623  0011A8  4B67               	infsnz	ejectbad@i& (0+255),f,b
  1624  0011AA  2B68               	incf	(ejectbad@i+1)& (0+255),f,b
  1625  0011AC  D7DC               	goto	l1724
  1626  0011AE                     l225:
  1627                           
  1628                           ; BSR set to: 0
  1629  0011AE  0012               	return		;funcret
  1630  0011B0                     __end_of_ejectbad:
  1631                           	opt stack 0
  1632                           tblptru	equ	0xFF8
  1633                           postinc0	equ	0xFEE
  1634                           wreg	equ	0xFE8
  1635                           postinc2	equ	0xFDE
  1636                           fsr2h	equ	0xFDA
  1637                           fsr2l	equ	0xFD9
  1638                           status	equ	0xFD8
  1639                           
  1640 ;; *************** function _solinoidout *****************
  1641 ;; Defined at:
  1642 ;;		line 11 in file "ioport.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  x               2    0[BANK0 ] int 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;		None               void
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1656 ;;      Params:         0       2       0       0       0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1658 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1659 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1660 ;;Total ram usage:        4 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    2
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_test1
  1667 ;;		_test2
  1668 ;;		_ejectbad
  1669 ;;		_ejectgood
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           	psect	text10
  1674  0012DA                     __ptext10:
  1675                           	opt stack 0
  1676  0012DA                     _solinoidout:
  1677                           	opt stack 27
  1678                           
  1679                           ;ioport.c: 14: if(!(LATC &(1<<x)))
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;incstack = 0
  1683  0012DA  C060  F062         	movff	solinoidout@x,??_solinoidout
  1684  0012DE  0E01               	movlw	1
  1685  0012E0  0100               	movlb	0	; () banked
  1686  0012E2  6F63               	movwf	(??_solinoidout+1)& (0+255),b
  1687  0012E4  0100               	movlb	0	; () banked
  1688  0012E6  2B62               	incf	??_solinoidout& (0+255),f,b
  1689  0012E8  D003               	goto	u1024
  1690  0012EA                     u1025:
  1691  0012EA  0100               	movlb	0	; () banked
  1692  0012EC  90D8               	bcf	status,0,c
  1693  0012EE  3763               	rlcf	(??_solinoidout+1)& (0+255),f,b
  1694  0012F0                     u1024:
  1695  0012F0  0100               	movlb	0	; () banked
  1696  0012F2  2F62               	decfsz	??_solinoidout& (0+255),f,b
  1697  0012F4  D7FA               	goto	u1025
  1698  0012F6  0100               	movlb	0	; () banked
  1699  0012F8  5163               	movf	(??_solinoidout+1)& (0+255),w,b
  1700  0012FA  148B               	andwf	3979,w,c	;volatile
  1701  0012FC  0900               	iorlw	0
  1702  0012FE  A4D8               	btfss	status,2,c
  1703  001300  D012               	goto	l1506
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;ioport.c: 15: LATC |=(1<<x);
  1707  001302  C060  F062         	movff	solinoidout@x,??_solinoidout
  1708  001306  0E01               	movlw	1
  1709  001308  0100               	movlb	0	; () banked
  1710  00130A  6F63               	movwf	(??_solinoidout+1)& (0+255),b
  1711  00130C  0100               	movlb	0	; () banked
  1712  00130E  2B62               	incf	??_solinoidout& (0+255),f,b
  1713  001310  D003               	goto	u1044
  1714  001312                     u1045:
  1715  001312  0100               	movlb	0	; () banked
  1716  001314  90D8               	bcf	status,0,c
  1717  001316  3763               	rlcf	(??_solinoidout+1)& (0+255),f,b
  1718  001318                     u1044:
  1719  001318  0100               	movlb	0	; () banked
  1720  00131A  2F62               	decfsz	??_solinoidout& (0+255),f,b
  1721  00131C  D7FA               	goto	u1045
  1722  00131E  0100               	movlb	0	; () banked
  1723  001320  5163               	movf	(??_solinoidout+1)& (0+255),w,b
  1724  001322  128B               	iorwf	3979,f,c	;volatile
  1725  001324  0012               	return	
  1726  001326                     l1506:
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;ioport.c: 16: else
  1730                           ;ioport.c: 17: LATC &=(~(1<<x));
  1731  001326  C060  F062         	movff	solinoidout@x,??_solinoidout
  1732  00132A  0E01               	movlw	1
  1733  00132C  0100               	movlb	0	; () banked
  1734  00132E  6F63               	movwf	(??_solinoidout+1)& (0+255),b
  1735  001330  0100               	movlb	0	; () banked
  1736  001332  2B62               	incf	??_solinoidout& (0+255),f,b
  1737  001334  D003               	goto	u1054
  1738  001336                     u1055:
  1739  001336  0100               	movlb	0	; () banked
  1740  001338  90D8               	bcf	status,0,c
  1741  00133A  3763               	rlcf	(??_solinoidout+1)& (0+255),f,b
  1742  00133C                     u1054:
  1743  00133C  0100               	movlb	0	; () banked
  1744  00133E  2F62               	decfsz	??_solinoidout& (0+255),f,b
  1745  001340  D7FA               	goto	u1055
  1746  001342  0100               	movlb	0	; () banked
  1747  001344  5163               	movf	(??_solinoidout+1)& (0+255),w,b
  1748  001346  0AFF               	xorlw	255
  1749  001348  168B               	andwf	3979,f,c	;volatile
  1750  00134A  0012               	return	
  1751  00134C                     __end_of_solinoidout:
  1752                           	opt stack 0
  1753                           tblptru	equ	0xFF8
  1754                           postinc0	equ	0xFEE
  1755                           wreg	equ	0xFE8
  1756                           postinc2	equ	0xFDE
  1757                           fsr2h	equ	0xFDA
  1758                           fsr2l	equ	0xFD9
  1759                           status	equ	0xFD8
  1760                           
  1761 ;; *************** function _pneumaticout *****************
  1762 ;; Defined at:
  1763 ;;		line 20 in file "ioport.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  x               2    0[BANK0 ] int 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;		None
  1768 ;; Return value:  Size  Location     Type
  1769 ;;		None               void
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1777 ;;      Params:         0       2       0       0       0       0       0       0       0
  1778 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1779 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1780 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1781 ;;Total ram usage:        4 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    2
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_ejectbad
  1788 ;;		_ejectgood
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	text11
  1793  00125E                     __ptext11:
  1794                           	opt stack 0
  1795  00125E                     _pneumaticout:
  1796                           	opt stack 27
  1797                           
  1798                           ;ioport.c: 22: x+=4;
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;incstack = 0
  1802  00125E  0E04               	movlw	4
  1803  001260  0100               	movlb	0	; () banked
  1804  001262  2760               	addwf	pneumaticout@x& (0+255),f,b
  1805  001264  0E00               	movlw	0
  1806  001266  2361               	addwfc	(pneumaticout@x+1)& (0+255),f,b
  1807                           
  1808                           ;ioport.c: 23: if(!(LATD &(1<<x)))
  1809  001268  C060  F062         	movff	pneumaticout@x,??_pneumaticout
  1810  00126C  0E01               	movlw	1
  1811  00126E  0100               	movlb	0	; () banked
  1812  001270  6F63               	movwf	(??_pneumaticout+1)& (0+255),b
  1813  001272  0100               	movlb	0	; () banked
  1814  001274  2B62               	incf	??_pneumaticout& (0+255),f,b
  1815  001276  D003               	goto	u1064
  1816  001278                     u1065:
  1817  001278  0100               	movlb	0	; () banked
  1818  00127A  90D8               	bcf	status,0,c
  1819  00127C  3763               	rlcf	(??_pneumaticout+1)& (0+255),f,b
  1820  00127E                     u1064:
  1821  00127E  0100               	movlb	0	; () banked
  1822  001280  2F62               	decfsz	??_pneumaticout& (0+255),f,b
  1823  001282  D7FA               	goto	u1065
  1824  001284  0100               	movlb	0	; () banked
  1825  001286  5163               	movf	(??_pneumaticout+1)& (0+255),w,b
  1826  001288  148C               	andwf	3980,w,c	;volatile
  1827  00128A  0900               	iorlw	0
  1828  00128C  A4D8               	btfss	status,2,c
  1829  00128E  D012               	goto	l1512
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;ioport.c: 24: LATD |=(1<<x);
  1833  001290  C060  F062         	movff	pneumaticout@x,??_pneumaticout
  1834  001294  0E01               	movlw	1
  1835  001296  0100               	movlb	0	; () banked
  1836  001298  6F63               	movwf	(??_pneumaticout+1)& (0+255),b
  1837  00129A  0100               	movlb	0	; () banked
  1838  00129C  2B62               	incf	??_pneumaticout& (0+255),f,b
  1839  00129E  D003               	goto	u1084
  1840  0012A0                     u1085:
  1841  0012A0  0100               	movlb	0	; () banked
  1842  0012A2  90D8               	bcf	status,0,c
  1843  0012A4  3763               	rlcf	(??_pneumaticout+1)& (0+255),f,b
  1844  0012A6                     u1084:
  1845  0012A6  0100               	movlb	0	; () banked
  1846  0012A8  2F62               	decfsz	??_pneumaticout& (0+255),f,b
  1847  0012AA  D7FA               	goto	u1085
  1848  0012AC  0100               	movlb	0	; () banked
  1849  0012AE  5163               	movf	(??_pneumaticout+1)& (0+255),w,b
  1850  0012B0  128C               	iorwf	3980,f,c	;volatile
  1851  0012B2  0012               	return	
  1852  0012B4                     l1512:
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;ioport.c: 25: else
  1856                           ;ioport.c: 26: LATD &=(~(1<<x));
  1857  0012B4  C060  F062         	movff	pneumaticout@x,??_pneumaticout
  1858  0012B8  0E01               	movlw	1
  1859  0012BA  0100               	movlb	0	; () banked
  1860  0012BC  6F63               	movwf	(??_pneumaticout+1)& (0+255),b
  1861  0012BE  0100               	movlb	0	; () banked
  1862  0012C0  2B62               	incf	??_pneumaticout& (0+255),f,b
  1863  0012C2  D003               	goto	u1094
  1864  0012C4                     u1095:
  1865  0012C4  0100               	movlb	0	; () banked
  1866  0012C6  90D8               	bcf	status,0,c
  1867  0012C8  3763               	rlcf	(??_pneumaticout+1)& (0+255),f,b
  1868  0012CA                     u1094:
  1869  0012CA  0100               	movlb	0	; () banked
  1870  0012CC  2F62               	decfsz	??_pneumaticout& (0+255),f,b
  1871  0012CE  D7FA               	goto	u1095
  1872  0012D0  0100               	movlb	0	; () banked
  1873  0012D2  5163               	movf	(??_pneumaticout+1)& (0+255),w,b
  1874  0012D4  0AFF               	xorlw	255
  1875  0012D6  168C               	andwf	3980,f,c	;volatile
  1876  0012D8  0012               	return	
  1877  0012DA                     __end_of_pneumaticout:
  1878                           	opt stack 0
  1879                           tblptru	equ	0xFF8
  1880                           postinc0	equ	0xFEE
  1881                           wreg	equ	0xFE8
  1882                           postinc2	equ	0xFDE
  1883                           fsr2h	equ	0xFDA
  1884                           fsr2l	equ	0xFD9
  1885                           status	equ	0xFD8
  1886                           
  1887 ;; *************** function _comparison *****************
  1888 ;; Defined at:
  1889 ;;		line 252 in file "main.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  i               2   10[BANK0 ] int 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;		None               void
  1896 ;; Registers used:
  1897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1903 ;;      Params:         0       0       0       0       0       0       0       0       0
  1904 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1905 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1906 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1907 ;;Total ram usage:        6 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    3
  1910 ;; This function calls:
  1911 ;;		___wmul
  1912 ;; This function is called by:
  1913 ;;		_main
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text12
  1918  000806                     __ptext12:
  1919                           	opt stack 0
  1920  000806                     _comparison:
  1921                           	opt stack 27
  1922                           
  1923                           ;main.c: 254: int i;
  1924                           ;main.c: 255: for(i=0;i<4;i++)
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;incstack = 0
  1928  000806  0E00               	movlw	0
  1929  000808  0100               	movlb	0	; () banked
  1930  00080A  6F6B               	movwf	(comparison@i+1)& (0+255),b
  1931  00080C  0E00               	movlw	0
  1932  00080E  6F6A               	movwf	comparison@i& (0+255),b
  1933                           
  1934                           ; BSR set to: 0
  1935  000810  0100               	movlb	0	; () banked
  1936  000812  BF6B               	btfsc	(comparison@i+1)& (0+255),7,b
  1937  000814  D00A               	goto	l1692
  1938  000816  0100               	movlb	0	; () banked
  1939  000818  516B               	movf	(comparison@i+1)& (0+255),w,b
  1940  00081A  E106               	bnz	u1250
  1941  00081C  0E04               	movlw	4
  1942  00081E  0100               	movlb	0	; () banked
  1943  000820  5D6A               	subwf	comparison@i& (0+255),w,b
  1944  000822  B0D8               	btfsc	status,0,c
  1945  000824  0012               	return	
  1946  000826  D001               	goto	l1692
  1947  000828                     u1250:
  1948                           
  1949                           ; BSR set to: 0
  1950  000828  0012               	return	
  1951  00082A                     l1692:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;main.c: 256: {
  1955                           ;main.c: 257: if(((sensor[i].sensor_offset+sensor[i].sensor_P1)<=value.Lower_Threshold) 
      +                          && ((sensor[i].sensor_offset+sensor[i].sensor_P2)<=value.Upper_Threshold) )
  1956  00082A  C06A  F060         	movff	comparison@i,___wmul@multiplier
  1957  00082E  C06B  F061         	movff	comparison@i+1,___wmul@multiplier+1
  1958  000832  0E00               	movlw	0
  1959  000834  0100               	movlb	0	; () banked
  1960  000836  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1961  000838  0E0B               	movlw	11
  1962  00083A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1963  00083C  ECE7  F00A         	call	___wmul	;wreg free
  1964  000840  0E02               	movlw	2
  1965  000842  0100               	movlb	0	; () banked
  1966  000844  2760               	addwf	?___wmul& (0+255),f,b
  1967  000846  0E00               	movlw	0
  1968  000848  0100               	movlb	0	; () banked
  1969  00084A  2361               	addwfc	(?___wmul+1)& (0+255),f,b
  1970  00084C  0E01               	movlw	low _sensor
  1971  00084E  0100               	movlb	0	; () banked
  1972  000850  2560               	addwf	?___wmul& (0+255),w,b
  1973  000852  6ED9               	movwf	fsr2l,c
  1974  000854  0E00               	movlw	high _sensor
  1975  000856  0100               	movlb	0	; () banked
  1976  000858  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1977  00085A  6EDA               	movwf	fsr2h,c
  1978  00085C  CFDE F066          	movff	postinc2,??_comparison
  1979  000860  CFDD F067          	movff	postdec2,??_comparison+1
  1980  000864  C06A  F060         	movff	comparison@i,___wmul@multiplier
  1981  000868  C06B  F061         	movff	comparison@i+1,___wmul@multiplier+1
  1982  00086C  0E00               	movlw	0
  1983  00086E  0100               	movlb	0	; () banked
  1984  000870  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1985  000872  0E0B               	movlw	11
  1986  000874  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1987  000876  ECE7  F00A         	call	___wmul	;wreg free
  1988  00087A  0E01               	movlw	low _sensor
  1989  00087C  0100               	movlb	0	; () banked
  1990  00087E  2560               	addwf	?___wmul& (0+255),w,b
  1991  000880  6ED9               	movwf	fsr2l,c
  1992  000882  0E00               	movlw	high _sensor
  1993  000884  0100               	movlb	0	; () banked
  1994  000886  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1995  000888  6EDA               	movwf	fsr2h,c
  1996  00088A  CFDE F068          	movff	postinc2,??_comparison+2
  1997  00088E  CFDD F069          	movff	postdec2,??_comparison+3
  1998  000892  0100               	movlb	0	; () banked
  1999  000894  5166               	movf	??_comparison& (0+255),w,b
  2000  000896  0100               	movlb	0	; () banked
  2001  000898  2768               	addwf	(??_comparison+2)& (0+255),f,b
  2002  00089A  0100               	movlb	0	; () banked
  2003  00089C  5167               	movf	(??_comparison+1)& (0+255),w,b
  2004  00089E  0100               	movlb	0	; () banked
  2005  0008A0  2369               	addwfc	(??_comparison+3)& (0+255),f,b
  2006  0008A2  0100               	movlb	0	; () banked
  2007  0008A4  5168               	movf	(??_comparison+2)& (0+255),w,b
  2008  0008A6  5C2F               	subwf	_value+2,w,c
  2009  0008A8  0100               	movlb	0	; () banked
  2010  0008AA  5169               	movf	(??_comparison+3)& (0+255),w,b
  2011  0008AC  5830               	subwfb	_value+3,w,c
  2012  0008AE  A0D8               	btfss	status,0,c
  2013  0008B0  D0DB               	goto	l1702
  2014                           
  2015                           ; BSR set to: 0
  2016  0008B2  C06A  F060         	movff	comparison@i,___wmul@multiplier
  2017  0008B6  C06B  F061         	movff	comparison@i+1,___wmul@multiplier+1
  2018  0008BA  0E00               	movlw	0
  2019  0008BC  0100               	movlb	0	; () banked
  2020  0008BE  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2021  0008C0  0E0B               	movlw	11
  2022  0008C2  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2023  0008C4  ECE7  F00A         	call	___wmul	;wreg free
  2024  0008C8  0E04               	movlw	4
  2025  0008CA  0100               	movlb	0	; () banked
  2026  0008CC  2760               	addwf	?___wmul& (0+255),f,b
  2027  0008CE  0E00               	movlw	0
  2028  0008D0  0100               	movlb	0	; () banked
  2029  0008D2  2361               	addwfc	(?___wmul+1)& (0+255),f,b
  2030  0008D4  0E01               	movlw	low _sensor
  2031  0008D6  0100               	movlb	0	; () banked
  2032  0008D8  2560               	addwf	?___wmul& (0+255),w,b
  2033  0008DA  6ED9               	movwf	fsr2l,c
  2034  0008DC  0E00               	movlw	high _sensor
  2035  0008DE  0100               	movlb	0	; () banked
  2036  0008E0  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2037  0008E2  6EDA               	movwf	fsr2h,c
  2038  0008E4  CFDE F066          	movff	postinc2,??_comparison
  2039  0008E8  CFDD F067          	movff	postdec2,??_comparison+1
  2040  0008EC  C06A  F060         	movff	comparison@i,___wmul@multiplier
  2041  0008F0  C06B  F061         	movff	comparison@i+1,___wmul@multiplier+1
  2042  0008F4  0E00               	movlw	0
  2043  0008F6  0100               	movlb	0	; () banked
  2044  0008F8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2045  0008FA  0E0B               	movlw	11
  2046  0008FC  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2047  0008FE  ECE7  F00A         	call	___wmul	;wreg free
  2048  000902  0E01               	movlw	low _sensor
  2049  000904  0100               	movlb	0	; () banked
  2050  000906  2560               	addwf	?___wmul& (0+255),w,b
  2051  000908  6ED9               	movwf	fsr2l,c
  2052  00090A  0E00               	movlw	high _sensor
  2053  00090C  0100               	movlb	0	; () banked
  2054  00090E  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2055  000910  6EDA               	movwf	fsr2h,c
  2056  000912  CFDE F068          	movff	postinc2,??_comparison+2
  2057  000916  CFDD F069          	movff	postdec2,??_comparison+3
  2058  00091A  0100               	movlb	0	; () banked
  2059  00091C  5166               	movf	??_comparison& (0+255),w,b
  2060  00091E  0100               	movlb	0	; () banked
  2061  000920  2768               	addwf	(??_comparison+2)& (0+255),f,b
  2062  000922  0100               	movlb	0	; () banked
  2063  000924  5167               	movf	(??_comparison+1)& (0+255),w,b
  2064  000926  0100               	movlb	0	; () banked
  2065  000928  2369               	addwfc	(??_comparison+3)& (0+255),f,b
  2066  00092A  0100               	movlb	0	; () banked
  2067  00092C  5168               	movf	(??_comparison+2)& (0+255),w,b
  2068  00092E  5C2D               	subwf	_value,w,c
  2069  000930  0100               	movlb	0	; () banked
  2070  000932  5169               	movf	(??_comparison+3)& (0+255),w,b
  2071  000934  582E               	subwfb	_value+1,w,c
  2072  000936  A0D8               	btfss	status,0,c
  2073  000938  D097               	goto	l1702
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;main.c: 258: if(((sensor[i].sensor_offset+sensor[i].sensor_P3)<=value.Lower_Threshold )
      +                          && ((sensor[i].sensor_offset+sensor[i].sensor_P4)<=value.Upper_Threshold) )
  2077  00093A  C06A  F060         	movff	comparison@i,___wmul@multiplier
  2078  00093E  C06B  F061         	movff	comparison@i+1,___wmul@multiplier+1
  2079  000942  0E00               	movlw	0
  2080  000944  0100               	movlb	0	; () banked
  2081  000946  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2082  000948  0E0B               	movlw	11
  2083  00094A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2084  00094C  ECE7  F00A         	call	___wmul	;wreg free
  2085  000950  0E06               	movlw	6
  2086  000952  0100               	movlb	0	; () banked
  2087  000954  2760               	addwf	?___wmul& (0+255),f,b
  2088  000956  0E00               	movlw	0
  2089  000958  0100               	movlb	0	; () banked
  2090  00095A  2361               	addwfc	(?___wmul+1)& (0+255),f,b
  2091  00095C  0E01               	movlw	low _sensor
  2092  00095E  0100               	movlb	0	; () banked
  2093  000960  2560               	addwf	?___wmul& (0+255),w,b
  2094  000962  6ED9               	movwf	fsr2l,c
  2095  000964  0E00               	movlw	high _sensor
  2096  000966  0100               	movlb	0	; () banked
  2097  000968  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2098  00096A  6EDA               	movwf	fsr2h,c
  2099  00096C  CFDE F066          	movff	postinc2,??_comparison
  2100  000970  CFDD F067          	movff	postdec2,??_comparison+1
  2101  000974  C06A  F060         	movff	comparison@i,___wmul@multiplier
  2102  000978  C06B  F061         	movff	comparison@i+1,___wmul@multiplier+1
  2103  00097C  0E00               	movlw	0
  2104  00097E  0100               	movlb	0	; () banked
  2105  000980  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2106  000982  0E0B               	movlw	11
  2107  000984  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2108  000986  ECE7  F00A         	call	___wmul	;wreg free
  2109  00098A  0E01               	movlw	low _sensor
  2110  00098C  0100               	movlb	0	; () banked
  2111  00098E  2560               	addwf	?___wmul& (0+255),w,b
  2112  000990  6ED9               	movwf	fsr2l,c
  2113  000992  0E00               	movlw	high _sensor
  2114  000994  0100               	movlb	0	; () banked
  2115  000996  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2116  000998  6EDA               	movwf	fsr2h,c
  2117  00099A  CFDE F068          	movff	postinc2,??_comparison+2
  2118  00099E  CFDD F069          	movff	postdec2,??_comparison+3
  2119  0009A2  0100               	movlb	0	; () banked
  2120  0009A4  5166               	movf	??_comparison& (0+255),w,b
  2121  0009A6  0100               	movlb	0	; () banked
  2122  0009A8  2768               	addwf	(??_comparison+2)& (0+255),f,b
  2123  0009AA  0100               	movlb	0	; () banked
  2124  0009AC  5167               	movf	(??_comparison+1)& (0+255),w,b
  2125  0009AE  0100               	movlb	0	; () banked
  2126  0009B0  2369               	addwfc	(??_comparison+3)& (0+255),f,b
  2127  0009B2  0100               	movlb	0	; () banked
  2128  0009B4  5168               	movf	(??_comparison+2)& (0+255),w,b
  2129  0009B6  5C2F               	subwf	_value+2,w,c
  2130  0009B8  0100               	movlb	0	; () banked
  2131  0009BA  5169               	movf	(??_comparison+3)& (0+255),w,b
  2132  0009BC  5830               	subwfb	_value+3,w,c
  2133  0009BE  A0D8               	btfss	status,0,c
  2134  0009C0  D053               	goto	l1702
  2135                           
  2136                           ; BSR set to: 0
  2137  0009C2  C06A  F060         	movff	comparison@i,___wmul@multiplier
  2138  0009C6  C06B  F061         	movff	comparison@i+1,___wmul@multiplier+1
  2139  0009CA  0E00               	movlw	0
  2140  0009CC  0100               	movlb	0	; () banked
  2141  0009CE  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2142  0009D0  0E0B               	movlw	11
  2143  0009D2  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2144  0009D4  ECE7  F00A         	call	___wmul	;wreg free
  2145  0009D8  0E08               	movlw	8
  2146  0009DA  0100               	movlb	0	; () banked
  2147  0009DC  2760               	addwf	?___wmul& (0+255),f,b
  2148  0009DE  0E00               	movlw	0
  2149  0009E0  0100               	movlb	0	; () banked
  2150  0009E2  2361               	addwfc	(?___wmul+1)& (0+255),f,b
  2151  0009E4  0E01               	movlw	low _sensor
  2152  0009E6  0100               	movlb	0	; () banked
  2153  0009E8  2560               	addwf	?___wmul& (0+255),w,b
  2154  0009EA  6ED9               	movwf	fsr2l,c
  2155  0009EC  0E00               	movlw	high _sensor
  2156  0009EE  0100               	movlb	0	; () banked
  2157  0009F0  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2158  0009F2  6EDA               	movwf	fsr2h,c
  2159  0009F4  CFDE F066          	movff	postinc2,??_comparison
  2160  0009F8  CFDD F067          	movff	postdec2,??_comparison+1
  2161  0009FC  C06A  F060         	movff	comparison@i,___wmul@multiplier
  2162  000A00  C06B  F061         	movff	comparison@i+1,___wmul@multiplier+1
  2163  000A04  0E00               	movlw	0
  2164  000A06  0100               	movlb	0	; () banked
  2165  000A08  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2166  000A0A  0E0B               	movlw	11
  2167  000A0C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2168  000A0E  ECE7  F00A         	call	___wmul	;wreg free
  2169  000A12  0E01               	movlw	low _sensor
  2170  000A14  0100               	movlb	0	; () banked
  2171  000A16  2560               	addwf	?___wmul& (0+255),w,b
  2172  000A18  6ED9               	movwf	fsr2l,c
  2173  000A1A  0E00               	movlw	high _sensor
  2174  000A1C  0100               	movlb	0	; () banked
  2175  000A1E  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2176  000A20  6EDA               	movwf	fsr2h,c
  2177  000A22  CFDE F068          	movff	postinc2,??_comparison+2
  2178  000A26  CFDD F069          	movff	postdec2,??_comparison+3
  2179  000A2A  0100               	movlb	0	; () banked
  2180  000A2C  5166               	movf	??_comparison& (0+255),w,b
  2181  000A2E  0100               	movlb	0	; () banked
  2182  000A30  2768               	addwf	(??_comparison+2)& (0+255),f,b
  2183  000A32  0100               	movlb	0	; () banked
  2184  000A34  5167               	movf	(??_comparison+1)& (0+255),w,b
  2185  000A36  0100               	movlb	0	; () banked
  2186  000A38  2369               	addwfc	(??_comparison+3)& (0+255),f,b
  2187  000A3A  0100               	movlb	0	; () banked
  2188  000A3C  5168               	movf	(??_comparison+2)& (0+255),w,b
  2189  000A3E  5C2D               	subwf	_value,w,c
  2190  000A40  0100               	movlb	0	; () banked
  2191  000A42  5169               	movf	(??_comparison+3)& (0+255),w,b
  2192  000A44  582E               	subwfb	_value+1,w,c
  2193  000A46  A0D8               	btfss	status,0,c
  2194  000A48  D00F               	goto	l1702
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;main.c: 259: good[i]=1;
  2198  000A4A  90D8               	bcf	status,0,c
  2199  000A4C  0100               	movlb	0	; () banked
  2200  000A4E  356A               	rlcf	comparison@i& (0+255),w,b
  2201  000A50  6ED9               	movwf	fsr2l,c
  2202  000A52  0100               	movlb	0	; () banked
  2203  000A54  356B               	rlcf	(comparison@i+1)& (0+255),w,b
  2204  000A56  6EDA               	movwf	fsr2h,c
  2205  000A58  0E6C               	movlw	low _good
  2206  000A5A  26D9               	addwf	fsr2l,f,c
  2207  000A5C  0E00               	movlw	high _good
  2208  000A5E  22DA               	addwfc	fsr2h,f,c
  2209  000A60  0E01               	movlw	1
  2210  000A62  6EDE               	movwf	postinc2,c
  2211  000A64  0E00               	movlw	0
  2212  000A66  6EDD               	movwf	postdec2,c
  2213  000A68                     l1702:
  2214                           
  2215                           ; BSR set to: 0
  2216  000A68  0100               	movlb	0	; () banked
  2217  000A6A  4B6A               	infsnz	comparison@i& (0+255),f,b
  2218  000A6C  2B6B               	incf	(comparison@i+1)& (0+255),f,b
  2219                           
  2220                           ; BSR set to: 0
  2221  000A6E  0100               	movlb	0	; () banked
  2222  000A70  BF6B               	btfsc	(comparison@i+1)& (0+255),7,b
  2223  000A72  D6DB               	goto	l1692
  2224  000A74  0100               	movlb	0	; () banked
  2225  000A76  516B               	movf	(comparison@i+1)& (0+255),w,b
  2226  000A78  E101               	bnz	l241
  2227  000A7A  D6D0               	goto	L1
  2228  000A7C                     l241:
  2229                           
  2230                           ; BSR set to: 0
  2231  000A7C  0012               	return		;funcret
  2232  000A7E                     __end_of_comparison:
  2233                           	opt stack 0
  2234                           tblptru	equ	0xFF8
  2235                           postinc0	equ	0xFEE
  2236                           wreg	equ	0xFE8
  2237                           postinc2	equ	0xFDE
  2238                           postdec2	equ	0xFDD
  2239                           fsr2h	equ	0xFDA
  2240                           fsr2l	equ	0xFD9
  2241                           status	equ	0xFD8
  2242                           
  2243 ;; *************** function ___wmul *****************
  2244 ;; Defined at:
  2245 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2248 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  product         2    4[BANK0 ] unsigned int 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  2    0[BANK0 ] unsigned int 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0, prodl, prodh
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2260 ;;      Params:         0       4       0       0       0       0       0       0       0
  2261 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2263 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2264 ;;Total ram usage:        6 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    2
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_comparison
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text13
  2275  0015CE                     __ptext13:
  2276                           	opt stack 0
  2277  0015CE                     ___wmul:
  2278                           	opt stack 27
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;incstack = 0
  2282  0015CE  0100               	movlb	0	; () banked
  2283  0015D0  5160               	movf	___wmul@multiplier& (0+255),w,b
  2284  0015D2  0100               	movlb	0	; () banked
  2285  0015D4  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2286  0015D6  CFF3 F064          	movff	prodl,___wmul@product
  2287  0015DA  CFF4 F065          	movff	prodh,___wmul@product+1
  2288  0015DE  0100               	movlb	0	; () banked
  2289  0015E0  5160               	movf	___wmul@multiplier& (0+255),w,b
  2290  0015E2  0100               	movlb	0	; () banked
  2291  0015E4  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2292  0015E6  50F3               	movf	prodl,w,c
  2293  0015E8  0100               	movlb	0	; () banked
  2294  0015EA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2295  0015EC  0100               	movlb	0	; () banked
  2296  0015EE  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2297  0015F0  0100               	movlb	0	; () banked
  2298  0015F2  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2299  0015F4  50F3               	movf	prodl,w,c
  2300  0015F6  0100               	movlb	0	; () banked
  2301  0015F8  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2302                           
  2303                           ; BSR set to: 0
  2304  0015FA  C064  F060         	movff	___wmul@product,?___wmul
  2305  0015FE  C065  F061         	movff	___wmul@product+1,?___wmul+1
  2306  001602  0012               	return	
  2307  001604                     __end_of___wmul:
  2308                           	opt stack 0
  2309                           tblptru	equ	0xFF8
  2310                           prodh	equ	0xFF4
  2311                           prodl	equ	0xFF3
  2312                           postinc0	equ	0xFEE
  2313                           wreg	equ	0xFE8
  2314                           postinc2	equ	0xFDE
  2315                           postdec2	equ	0xFDD
  2316                           fsr2h	equ	0xFDA
  2317                           fsr2l	equ	0xFD9
  2318                           status	equ	0xFD8
  2319                           
  2320 ;; *************** function _communication *****************
  2321 ;; Defined at:
  2322 ;;		line 73 in file "main.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  tx              3    0        unsigned char [3]
  2327 ;;  rx              1    6[BANK0 ] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;		None               void
  2330 ;; Registers used:
  2331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2337 ;;      Params:         0       0       0       0       0       0       0       0       0
  2338 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2339 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2340 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2341 ;;Total ram usage:        2 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    4
  2344 ;; This function calls:
  2345 ;;		_delaysec
  2346 ;;		_ledout
  2347 ;;		_uartrx
  2348 ;;		_uarttx
  2349 ;;		_uarttxch
  2350 ;; This function is called by:
  2351 ;;		_main
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text14
  2356  000A7E                     __ptext14:
  2357                           	opt stack 0
  2358  000A7E                     _communication:
  2359                           	opt stack 26
  2360  000A7E  0E01               	movlw	low STR_1
  2361  000A80  0100               	movlb	0	; () banked
  2362  000A82  6F60               	movwf	uarttx@s& (0+255),b
  2363  000A84  0E08               	movlw	high STR_1
  2364  000A86  0100               	movlb	0	; () banked
  2365  000A88  6F61               	movwf	(uarttx@s+1)& (0+255),b
  2366  000A8A  EC9B  F00A         	call	_uarttx	;wreg free
  2367                           
  2368                           ;main.c: 77: rx=uartrx();
  2369  000A8E  EC38  F00B         	call	_uartrx	;wreg free
  2370  000A92  0100               	movlb	0	; () banked
  2371  000A94  6F66               	movwf	communication@rx& (0+255),b
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;main.c: 78: if(rx!=1)
  2375  000A96  0100               	movlb	0	; () banked
  2376  000A98  0566               	decf	communication@rx& (0+255),w,b
  2377  000A9A  A4D8               	btfss	status,2,c
  2378  000A9C  D7F0               	goto	l1584
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;main.c: 80: else
  2382                           ;main.c: 81: uarttxch('1');
  2383                           
  2384                           ; BSR set to: 0
  2385                           
  2386                           ; BSR set to: 0
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;main.c: 79: goto ID;
  2390  000A9E  0E31               	movlw	49
  2391  000AA0  EC31  F00B         	call	_uarttxch
  2392                           
  2393                           ;main.c: 82: glove.Gloves_Size=uartrx();
  2394  000AA4  EC38  F00B         	call	_uartrx	;wreg free
  2395  000AA8  6E37               	movwf	_glove,c
  2396                           
  2397                           ;main.c: 83: glove.Inflate_time_1=uartrx();
  2398  000AAA  EC38  F00B         	call	_uartrx	;wreg free
  2399  000AAE  6E38               	movwf	_glove+1,c
  2400                           
  2401                           ;main.c: 84: glove.Inflate_time_2=uartrx();
  2402  000AB0  EC38  F00B         	call	_uartrx	;wreg free
  2403  000AB4  6E39               	movwf	_glove+2,c
  2404                           
  2405                           ;main.c: 85: glove.Air_eject_time_for_bad=uartrx();
  2406  000AB6  EC38  F00B         	call	_uartrx	;wreg free
  2407  000ABA  6E3B               	movwf	_glove+4,c
  2408                           
  2409                           ;main.c: 86: glove.Air_eject_time_for_good=uartrx();
  2410  000ABC  EC38  F00B         	call	_uartrx	;wreg free
  2411  000AC0  6E3A               	movwf	_glove+3,c
  2412                           
  2413                           ;main.c: 87: value.Nominal_Pressure=uartrx();
  2414  000AC2  EC38  F00B         	call	_uartrx	;wreg free
  2415  000AC6  0100               	movlb	0	; () banked
  2416  000AC8  6F65               	movwf	??_communication& (0+255),b
  2417  000ACA  0100               	movlb	0	; () banked
  2418  000ACC  5165               	movf	??_communication& (0+255),w,b
  2419  000ACE  6E31               	movwf	_value+4,c
  2420  000AD0  6A32               	clrf	_value+5,c
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;main.c: 89: value.Nominal_Pressure=(uartrx()<<8);
  2424  000AD2  EC38  F00B         	call	_uartrx	;wreg free
  2425  000AD6  6E32               	movwf	_value+5,c
  2426  000AD8  6A31               	clrf	_value+4,c
  2427                           
  2428                           ;main.c: 90: value.Lower_Threshold=uartrx();
  2429  000ADA  EC38  F00B         	call	_uartrx	;wreg free
  2430  000ADE  0100               	movlb	0	; () banked
  2431  000AE0  6F65               	movwf	??_communication& (0+255),b
  2432  000AE2  0100               	movlb	0	; () banked
  2433  000AE4  5165               	movf	??_communication& (0+255),w,b
  2434  000AE6  6E2F               	movwf	_value+2,c
  2435  000AE8  6A30               	clrf	_value+3,c
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;main.c: 91: value.Lower_Threshold=(uartrx()<<8);
  2439  000AEA  EC38  F00B         	call	_uartrx	;wreg free
  2440  000AEE  6E30               	movwf	_value+3,c
  2441  000AF0  6A2F               	clrf	_value+2,c
  2442                           
  2443                           ;main.c: 92: value.Upper_Threshold=uartrx();
  2444  000AF2  EC38  F00B         	call	_uartrx	;wreg free
  2445  000AF6  0100               	movlb	0	; () banked
  2446  000AF8  6F65               	movwf	??_communication& (0+255),b
  2447  000AFA  0100               	movlb	0	; () banked
  2448  000AFC  5165               	movf	??_communication& (0+255),w,b
  2449  000AFE  6E2D               	movwf	_value,c
  2450  000B00  6A2E               	clrf	_value+1,c
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;main.c: 93: value.Upper_Threshold=(uartrx()<<8);
  2454  000B02  EC38  F00B         	call	_uartrx	;wreg free
  2455  000B06  6E2E               	movwf	_value+1,c
  2456  000B08  6A2D               	clrf	_value,c
  2457                           
  2458                           ;main.c: 94: value.Negative_Tolerance=uartrx();
  2459  000B0A  EC38  F00B         	call	_uartrx	;wreg free
  2460  000B0E  0100               	movlb	0	; () banked
  2461  000B10  6F65               	movwf	??_communication& (0+255),b
  2462  000B12  0100               	movlb	0	; () banked
  2463  000B14  5165               	movf	??_communication& (0+255),w,b
  2464  000B16  6E35               	movwf	_value+8,c
  2465  000B18  6A36               	clrf	_value+9,c
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;main.c: 95: value.Negative_Tolerance=(uartrx()<<8);
  2469  000B1A  EC38  F00B         	call	_uartrx	;wreg free
  2470  000B1E  6E36               	movwf	_value+9,c
  2471  000B20  6A35               	clrf	_value+8,c
  2472                           
  2473                           ;main.c: 96: value.Positive_Tolerance=uartrx();
  2474  000B22  EC38  F00B         	call	_uartrx	;wreg free
  2475  000B26  0100               	movlb	0	; () banked
  2476  000B28  6F65               	movwf	??_communication& (0+255),b
  2477  000B2A  0100               	movlb	0	; () banked
  2478  000B2C  5165               	movf	??_communication& (0+255),w,b
  2479  000B2E  6E33               	movwf	_value+6,c
  2480  000B30  6A34               	clrf	_value+7,c
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;main.c: 97: value.Positive_Tolerance=(uartrx()<<8);
  2484  000B32  EC38  F00B         	call	_uartrx	;wreg free
  2485  000B36  6E34               	movwf	_value+7,c
  2486  000B38  6A33               	clrf	_value+6,c
  2487                           
  2488                           ;main.c: 99: uarttxch('1');
  2489  000B3A  0E31               	movlw	49
  2490  000B3C  EC31  F00B         	call	_uarttxch
  2491                           
  2492                           ;main.c: 100: uarttx(sensor[0].sensor_offset);
  2493  000B40  C001  F060         	movff	_sensor,uarttx@s
  2494  000B44  C002  F061         	movff	_sensor+1,uarttx@s+1
  2495  000B48  EC9B  F00A         	call	_uarttx	;wreg free
  2496                           
  2497                           ;main.c: 101: uarttx(sensor[0].sensor_P1);
  2498  000B4C  C003  F060         	movff	_sensor+2,uarttx@s
  2499  000B50  C004  F061         	movff	_sensor+3,uarttx@s+1
  2500  000B54  EC9B  F00A         	call	_uarttx	;wreg free
  2501                           
  2502                           ;main.c: 102: uarttx(sensor[0].sensor_P2);
  2503  000B58  C005  F060         	movff	_sensor+4,uarttx@s
  2504  000B5C  C006  F061         	movff	_sensor+5,uarttx@s+1
  2505  000B60  EC9B  F00A         	call	_uarttx	;wreg free
  2506                           
  2507                           ;main.c: 103: uarttx(sensor[0].sensor_P3);
  2508  000B64  C007  F060         	movff	_sensor+6,uarttx@s
  2509  000B68  C008  F061         	movff	_sensor+7,uarttx@s+1
  2510  000B6C  EC9B  F00A         	call	_uarttx	;wreg free
  2511                           
  2512                           ;main.c: 104: uarttx(sensor[0].sensor_P4);
  2513  000B70  C009  F060         	movff	_sensor+8,uarttx@s
  2514  000B74  C00A  F061         	movff	_sensor+9,uarttx@s+1
  2515  000B78  EC9B  F00A         	call	_uarttx	;wreg free
  2516                           
  2517                           ;main.c: 105: uarttxch(sensor[0].sensor_Status);
  2518  000B7C  500B               	movf	_sensor+10,w,c
  2519  000B7E  EC31  F00B         	call	_uarttxch
  2520                           
  2521                           ;main.c: 107: uarttx(sensor[1].sensor_offset);
  2522  000B82  C00C  F060         	movff	_sensor+11,uarttx@s
  2523  000B86  C00D  F061         	movff	_sensor+12,uarttx@s+1
  2524  000B8A  EC9B  F00A         	call	_uarttx	;wreg free
  2525                           
  2526                           ;main.c: 108: uarttx(sensor[1].sensor_P1);
  2527  000B8E  C00E  F060         	movff	_sensor+13,uarttx@s
  2528  000B92  C00F  F061         	movff	_sensor+14,uarttx@s+1
  2529  000B96  EC9B  F00A         	call	_uarttx	;wreg free
  2530                           
  2531                           ;main.c: 109: uarttx(sensor[1].sensor_P2);
  2532  000B9A  C010  F060         	movff	_sensor+15,uarttx@s
  2533  000B9E  C011  F061         	movff	_sensor+16,uarttx@s+1
  2534  000BA2  EC9B  F00A         	call	_uarttx	;wreg free
  2535                           
  2536                           ;main.c: 110: uarttx(sensor[1].sensor_P3);
  2537  000BA6  C012  F060         	movff	_sensor+17,uarttx@s
  2538  000BAA  C013  F061         	movff	_sensor+18,uarttx@s+1
  2539  000BAE  EC9B  F00A         	call	_uarttx	;wreg free
  2540                           
  2541                           ;main.c: 111: uarttx(sensor[1].sensor_P4);
  2542  000BB2  C014  F060         	movff	_sensor+19,uarttx@s
  2543  000BB6  C015  F061         	movff	_sensor+20,uarttx@s+1
  2544  000BBA  EC9B  F00A         	call	_uarttx	;wreg free
  2545                           
  2546                           ;main.c: 112: uarttxch(sensor[1].sensor_Status);
  2547  000BBE  5016               	movf	_sensor+21,w,c
  2548  000BC0  EC31  F00B         	call	_uarttxch
  2549                           
  2550                           ;main.c: 114: uarttx(sensor[2].sensor_offset);
  2551  000BC4  C017  F060         	movff	_sensor+22,uarttx@s
  2552  000BC8  C018  F061         	movff	_sensor+23,uarttx@s+1
  2553  000BCC  EC9B  F00A         	call	_uarttx	;wreg free
  2554                           
  2555                           ;main.c: 115: uarttx(sensor[2].sensor_P1);
  2556  000BD0  C019  F060         	movff	_sensor+24,uarttx@s
  2557  000BD4  C01A  F061         	movff	_sensor+25,uarttx@s+1
  2558  000BD8  EC9B  F00A         	call	_uarttx	;wreg free
  2559                           
  2560                           ;main.c: 116: uarttx(sensor[2].sensor_P2);
  2561  000BDC  C01B  F060         	movff	_sensor+26,uarttx@s
  2562  000BE0  C01C  F061         	movff	_sensor+27,uarttx@s+1
  2563  000BE4  EC9B  F00A         	call	_uarttx	;wreg free
  2564                           
  2565                           ;main.c: 117: uarttx(sensor[2].sensor_P3);
  2566  000BE8  C01D  F060         	movff	_sensor+28,uarttx@s
  2567  000BEC  C01E  F061         	movff	_sensor+29,uarttx@s+1
  2568  000BF0  EC9B  F00A         	call	_uarttx	;wreg free
  2569                           
  2570                           ;main.c: 118: uarttx(sensor[2].sensor_P4);
  2571  000BF4  C01F  F060         	movff	_sensor+30,uarttx@s
  2572  000BF8  C020  F061         	movff	_sensor+31,uarttx@s+1
  2573  000BFC  EC9B  F00A         	call	_uarttx	;wreg free
  2574                           
  2575                           ;main.c: 119: uarttxch(sensor[2].sensor_Status);
  2576  000C00  5021               	movf	_sensor+32,w,c
  2577  000C02  EC31  F00B         	call	_uarttxch
  2578                           
  2579                           ;main.c: 121: uarttx(sensor[3].sensor_offset);
  2580  000C06  C022  F060         	movff	_sensor+33,uarttx@s
  2581  000C0A  C023  F061         	movff	_sensor+34,uarttx@s+1
  2582  000C0E  EC9B  F00A         	call	_uarttx	;wreg free
  2583                           
  2584                           ;main.c: 122: uarttx(sensor[3].sensor_P1);
  2585  000C12  C024  F060         	movff	_sensor+35,uarttx@s
  2586  000C16  C025  F061         	movff	_sensor+36,uarttx@s+1
  2587  000C1A  EC9B  F00A         	call	_uarttx	;wreg free
  2588                           
  2589                           ;main.c: 123: uarttx(sensor[3].sensor_P2);
  2590  000C1E  C026  F060         	movff	_sensor+37,uarttx@s
  2591  000C22  C027  F061         	movff	_sensor+38,uarttx@s+1
  2592  000C26  EC9B  F00A         	call	_uarttx	;wreg free
  2593                           
  2594                           ;main.c: 124: uarttx(sensor[3].sensor_P3);
  2595  000C2A  C028  F060         	movff	_sensor+39,uarttx@s
  2596  000C2E  C029  F061         	movff	_sensor+40,uarttx@s+1
  2597  000C32  EC9B  F00A         	call	_uarttx	;wreg free
  2598                           
  2599                           ;main.c: 125: uarttx(sensor[3].sensor_P4);
  2600  000C36  C02A  F060         	movff	_sensor+41,uarttx@s
  2601  000C3A  C02B  F061         	movff	_sensor+42,uarttx@s+1
  2602  000C3E  EC9B  F00A         	call	_uarttx	;wreg free
  2603                           
  2604                           ;main.c: 126: uarttxch(sensor[3].sensor_Status);
  2605  000C42  502C               	movf	_sensor+43,w,c
  2606  000C44  EC31  F00B         	call	_uarttxch
  2607  000C48                     l1676:
  2608  000C48  EC38  F00B         	call	_uartrx	;wreg free
  2609  000C4C  0100               	movlb	0	; () banked
  2610  000C4E  6F66               	movwf	communication@rx& (0+255),b
  2611  000C50  0100               	movlb	0	; () banked
  2612  000C52  0566               	decf	communication@rx& (0+255),w,b
  2613  000C54  B4D8               	btfsc	status,2,c
  2614  000C56  D7F8               	goto	l1676
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;main.c: 129: ledout(0);
  2618                           
  2619                           ; BSR set to: 0
  2620  000C58  0E00               	movlw	0
  2621  000C5A  0100               	movlb	0	; () banked
  2622  000C5C  6F61               	movwf	(ledout@x+1)& (0+255),b
  2623  000C5E  0E00               	movlw	0
  2624  000C60  6F60               	movwf	ledout@x& (0+255),b
  2625  000C62  ECA6  F009         	call	_ledout	;wreg free
  2626                           
  2627                           ;main.c: 130: ledout(1);
  2628  000C66  0E00               	movlw	0
  2629  000C68  0100               	movlb	0	; () banked
  2630  000C6A  6F61               	movwf	(ledout@x+1)& (0+255),b
  2631  000C6C  0E01               	movlw	1
  2632  000C6E  6F60               	movwf	ledout@x& (0+255),b
  2633  000C70  ECA6  F009         	call	_ledout	;wreg free
  2634                           
  2635                           ;main.c: 131: ledout(2);
  2636  000C74  0E00               	movlw	0
  2637  000C76  0100               	movlb	0	; () banked
  2638  000C78  6F61               	movwf	(ledout@x+1)& (0+255),b
  2639  000C7A  0E02               	movlw	2
  2640  000C7C  6F60               	movwf	ledout@x& (0+255),b
  2641  000C7E  ECA6  F009         	call	_ledout	;wreg free
  2642                           
  2643                           ;main.c: 132: ledout(3);
  2644  000C82  0E00               	movlw	0
  2645  000C84  0100               	movlb	0	; () banked
  2646  000C86  6F61               	movwf	(ledout@x+1)& (0+255),b
  2647  000C88  0E03               	movlw	3
  2648  000C8A  6F60               	movwf	ledout@x& (0+255),b
  2649  000C8C  ECA6  F009         	call	_ledout	;wreg free
  2650                           
  2651                           ;main.c: 133: delaysec(1);
  2652  000C90  0E00               	movlw	0
  2653  000C92  0100               	movlb	0	; () banked
  2654  000C94  6F61               	movwf	(delaysec@n+1)& (0+255),b
  2655  000C96  0E01               	movlw	1
  2656  000C98  6F60               	movwf	delaysec@n& (0+255),b
  2657  000C9A  ECC6  F00A         	call	_delaysec	;wreg free
  2658                           
  2659                           ;main.c: 134: ledout(0);
  2660  000C9E  0E00               	movlw	0
  2661  000CA0  0100               	movlb	0	; () banked
  2662  000CA2  6F61               	movwf	(ledout@x+1)& (0+255),b
  2663  000CA4  0E00               	movlw	0
  2664  000CA6  6F60               	movwf	ledout@x& (0+255),b
  2665  000CA8  ECA6  F009         	call	_ledout	;wreg free
  2666                           
  2667                           ;main.c: 135: ledout(1);
  2668  000CAC  0E00               	movlw	0
  2669  000CAE  0100               	movlb	0	; () banked
  2670  000CB0  6F61               	movwf	(ledout@x+1)& (0+255),b
  2671  000CB2  0E01               	movlw	1
  2672  000CB4  6F60               	movwf	ledout@x& (0+255),b
  2673  000CB6  ECA6  F009         	call	_ledout	;wreg free
  2674                           
  2675                           ;main.c: 136: ledout(2);
  2676  000CBA  0E00               	movlw	0
  2677  000CBC  0100               	movlb	0	; () banked
  2678  000CBE  6F61               	movwf	(ledout@x+1)& (0+255),b
  2679  000CC0  0E02               	movlw	2
  2680  000CC2  6F60               	movwf	ledout@x& (0+255),b
  2681  000CC4  ECA6  F009         	call	_ledout	;wreg free
  2682                           
  2683                           ;main.c: 137: ledout(3);
  2684  000CC8  0E00               	movlw	0
  2685  000CCA  0100               	movlb	0	; () banked
  2686  000CCC  6F61               	movwf	(ledout@x+1)& (0+255),b
  2687  000CCE  0E03               	movlw	3
  2688  000CD0  6F60               	movwf	ledout@x& (0+255),b
  2689  000CD2  ECA6  F009         	call	_ledout	;wreg free
  2690  000CD6  0012               	return		;funcret
  2691  000CD8                     __end_of_communication:
  2692                           	opt stack 0
  2693                           tblptru	equ	0xFF8
  2694                           prodh	equ	0xFF4
  2695                           prodl	equ	0xFF3
  2696                           postinc0	equ	0xFEE
  2697                           wreg	equ	0xFE8
  2698                           postinc2	equ	0xFDE
  2699                           postdec2	equ	0xFDD
  2700                           fsr2h	equ	0xFDA
  2701                           fsr2l	equ	0xFD9
  2702                           status	equ	0xFD8
  2703                           
  2704 ;; *************** function _uarttxch *****************
  2705 ;; Defined at:
  2706 ;;		line 28 in file "uart.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  ch              1    wreg     unsigned char 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  ch              1    0[BANK0 ] unsigned char 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;		None               void
  2713 ;; Registers used:
  2714 ;;		wreg
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2720 ;;      Params:         0       0       0       0       0       0       0       0       0
  2721 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2723 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2724 ;;Total ram usage:        1 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    2
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_communication
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text15
  2735  001662                     __ptext15:
  2736                           	opt stack 0
  2737  001662                     _uarttxch:
  2738                           	opt stack 27
  2739                           
  2740                           ;incstack = 0
  2741                           ;uarttxch@ch stored from wreg
  2742  001662  0100               	movlb	0	; () banked
  2743  001664  6F60               	movwf	uarttxch@ch& (0+255),b
  2744  001666                     l80:
  2745  001666  A89E               	btfss	3998,4,c	;volatile
  2746  001668  D7FE               	goto	l80
  2747                           
  2748                           ;uart.c: 31: TXREG=ch;
  2749  00166A  C060  FFAD         	movff	uarttxch@ch,4013	;volatile
  2750  00166E  0012               	return		;funcret
  2751  001670                     __end_of_uarttxch:
  2752                           	opt stack 0
  2753                           tblptru	equ	0xFF8
  2754                           prodh	equ	0xFF4
  2755                           prodl	equ	0xFF3
  2756                           postinc0	equ	0xFEE
  2757                           wreg	equ	0xFE8
  2758                           postinc2	equ	0xFDE
  2759                           postdec2	equ	0xFDD
  2760                           fsr2h	equ	0xFDA
  2761                           fsr2l	equ	0xFD9
  2762                           status	equ	0xFD8
  2763                           
  2764 ;; *************** function _uarttx *****************
  2765 ;; Defined at:
  2766 ;;		line 17 in file "uart.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2769 ;;		 -> RAM(2047), STR_1(4), 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;		None
  2772 ;; Return value:  Size  Location     Type
  2773 ;;		None               void
  2774 ;; Registers used:
  2775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2781 ;;      Params:         0       2       0       0       0       0       0       0       0
  2782 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2784 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2785 ;;Total ram usage:        2 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; Hardware stack levels required when called:    2
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_communication
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text16
  2796  001536                     __ptext16:
  2797                           	opt stack 0
  2798  001536                     _uarttx:
  2799                           	opt stack 27
  2800                           
  2801                           ;uart.c: 19: while(*s)
  2802                           
  2803                           ;incstack = 0
  2804  001536  D016               	goto	l1526
  2805  001538                     l73:
  2806  001538  A89E               	btfss	3998,4,c	;volatile
  2807  00153A  D7FE               	goto	l73
  2808                           
  2809                           ;uart.c: 22: TXREG=*(s++);
  2810  00153C  C060  FFF6         	movff	uarttx@s,tblptrl
  2811  001540  C061  FFF7         	movff	uarttx@s+1,tblptrh
  2812  001544  6AF8               	clrf	tblptru,c
  2813  001546  0E07               	movlw	(high __ramtop+-1)
  2814  001548  64F7               	cpfsgt	tblptrh,c
  2815  00154A  D003               	bra	u1157
  2816  00154C  0008               	tblrd		*
  2817  00154E  50F5               	movf	tablat,w,c
  2818  001550  D005               	bra	u1150
  2819  001552                     u1157:
  2820  001552  CFF6 FFE9          	movff	tblptrl,fsr0l
  2821  001556  CFF7 FFEA          	movff	tblptrh,fsr0h
  2822  00155A  50EF               	movf	indf0,w,c
  2823  00155C                     u1150:
  2824  00155C  6EAD               	movwf	4013,c	;volatile
  2825  00155E  0100               	movlb	0	; () banked
  2826  001560  4B60               	infsnz	uarttx@s& (0+255),f,b
  2827  001562  2B61               	incf	(uarttx@s+1)& (0+255),f,b
  2828  001564                     l1526:
  2829  001564  C060  FFF6         	movff	uarttx@s,tblptrl
  2830  001568  C061  FFF7         	movff	uarttx@s+1,tblptrh
  2831  00156C  6AF8               	clrf	tblptru,c
  2832  00156E  0E07               	movlw	(high __ramtop+-1)
  2833  001570  64F7               	cpfsgt	tblptrh,c
  2834  001572  D003               	bra	u1167
  2835  001574  0008               	tblrd		*
  2836  001576  50F5               	movf	tablat,w,c
  2837  001578  D005               	bra	u1160
  2838  00157A                     u1167:
  2839  00157A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2840  00157E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2841  001582  50EF               	movf	indf0,w,c
  2842  001584                     u1160:
  2843  001584  0900               	iorlw	0
  2844  001586  B4D8               	btfsc	status,2,c
  2845  001588  0012               	return	
  2846  00158A  D7D6               	goto	l73
  2847  00158C                     __end_of_uarttx:
  2848                           	opt stack 0
  2849                           tblptru	equ	0xFF8
  2850                           tblptrh	equ	0xFF7
  2851                           tblptrl	equ	0xFF6
  2852                           tablat	equ	0xFF5
  2853                           prodh	equ	0xFF4
  2854                           prodl	equ	0xFF3
  2855                           indf0	equ	0xFEF
  2856                           postinc0	equ	0xFEE
  2857                           fsr0h	equ	0xFEA
  2858                           fsr0l	equ	0xFE9
  2859                           wreg	equ	0xFE8
  2860                           postinc2	equ	0xFDE
  2861                           postdec2	equ	0xFDD
  2862                           fsr2h	equ	0xFDA
  2863                           fsr2l	equ	0xFD9
  2864                           status	equ	0xFD8
  2865                           
  2866 ;; *************** function _uartrx *****************
  2867 ;; Defined at:
  2868 ;;		line 34 in file "uart.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;		None
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  rx              1    0[BANK0 ] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      unsigned char 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2882 ;;      Params:         0       0       0       0       0       0       0       0       0
  2883 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2885 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2886 ;;Total ram usage:        1 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:    2
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_communication
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text17
  2897  001670                     __ptext17:
  2898                           	opt stack 0
  2899  001670                     _uartrx:
  2900                           	opt stack 27
  2901  001670                     l86:
  2902  001670  AA9E               	btfss	3998,5,c	;volatile
  2903  001672  D7FE               	goto	l86
  2904                           
  2905                           ;uart.c: 38: rx=RCREG;
  2906  001674  CFAE F060          	movff	4014,uartrx@rx	;volatile
  2907                           
  2908                           ;uart.c: 39: return rx;
  2909  001678  0100               	movlb	0	; () banked
  2910  00167A  5160               	movf	uartrx@rx& (0+255),w,b
  2911  00167C  0012               	return	
  2912  00167E                     __end_of_uartrx:
  2913                           	opt stack 0
  2914                           tblptru	equ	0xFF8
  2915                           tblptrh	equ	0xFF7
  2916                           tblptrl	equ	0xFF6
  2917                           tablat	equ	0xFF5
  2918                           prodh	equ	0xFF4
  2919                           prodl	equ	0xFF3
  2920                           indf0	equ	0xFEF
  2921                           postinc0	equ	0xFEE
  2922                           fsr0h	equ	0xFEA
  2923                           fsr0l	equ	0xFE9
  2924                           wreg	equ	0xFE8
  2925                           postinc2	equ	0xFDE
  2926                           postdec2	equ	0xFDD
  2927                           fsr2h	equ	0xFDA
  2928                           fsr2l	equ	0xFD9
  2929                           status	equ	0xFD8
  2930                           
  2931 ;; *************** function _ledout *****************
  2932 ;; Defined at:
  2933 ;;		line 30 in file "ioport.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  x               2    0[BANK0 ] int 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;		None               void
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2947 ;;      Params:         0       2       0       0       0       0       0       0       0
  2948 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2949 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2950 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2951 ;;Total ram usage:        4 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; Hardware stack levels required when called:    2
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_communication
  2958 ;;		_test1
  2959 ;;		_test2
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text18
  2964  00134C                     __ptext18:
  2965                           	opt stack 0
  2966  00134C                     _ledout:
  2967                           	opt stack 27
  2968                           
  2969                           ;ioport.c: 33: if(!(LATD &(1<<x)))
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;incstack = 0
  2973  00134C  C060  F062         	movff	ledout@x,??_ledout
  2974  001350  0E01               	movlw	1
  2975  001352  0100               	movlb	0	; () banked
  2976  001354  6F63               	movwf	(??_ledout+1)& (0+255),b
  2977  001356  0100               	movlb	0	; () banked
  2978  001358  2B62               	incf	??_ledout& (0+255),f,b
  2979  00135A  D003               	goto	u1104
  2980  00135C                     u1105:
  2981  00135C  0100               	movlb	0	; () banked
  2982  00135E  90D8               	bcf	status,0,c
  2983  001360  3763               	rlcf	(??_ledout+1)& (0+255),f,b
  2984  001362                     u1104:
  2985  001362  0100               	movlb	0	; () banked
  2986  001364  2F62               	decfsz	??_ledout& (0+255),f,b
  2987  001366  D7FA               	goto	u1105
  2988  001368  0100               	movlb	0	; () banked
  2989  00136A  5163               	movf	(??_ledout+1)& (0+255),w,b
  2990  00136C  148C               	andwf	3980,w,c	;volatile
  2991  00136E  0900               	iorlw	0
  2992  001370  A4D8               	btfss	status,2,c
  2993  001372  D012               	goto	l1518
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;ioport.c: 34: LATD |=(1<<x);
  2997  001374  C060  F062         	movff	ledout@x,??_ledout
  2998  001378  0E01               	movlw	1
  2999  00137A  0100               	movlb	0	; () banked
  3000  00137C  6F63               	movwf	(??_ledout+1)& (0+255),b
  3001  00137E  0100               	movlb	0	; () banked
  3002  001380  2B62               	incf	??_ledout& (0+255),f,b
  3003  001382  D003               	goto	u1124
  3004  001384                     u1125:
  3005  001384  0100               	movlb	0	; () banked
  3006  001386  90D8               	bcf	status,0,c
  3007  001388  3763               	rlcf	(??_ledout+1)& (0+255),f,b
  3008  00138A                     u1124:
  3009  00138A  0100               	movlb	0	; () banked
  3010  00138C  2F62               	decfsz	??_ledout& (0+255),f,b
  3011  00138E  D7FA               	goto	u1125
  3012  001390  0100               	movlb	0	; () banked
  3013  001392  5163               	movf	(??_ledout+1)& (0+255),w,b
  3014  001394  128C               	iorwf	3980,f,c	;volatile
  3015  001396  0012               	return	
  3016  001398                     l1518:
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;ioport.c: 35: else
  3020                           ;ioport.c: 36: LATD &=(~(1<<x));
  3021  001398  C060  F062         	movff	ledout@x,??_ledout
  3022  00139C  0E01               	movlw	1
  3023  00139E  0100               	movlb	0	; () banked
  3024  0013A0  6F63               	movwf	(??_ledout+1)& (0+255),b
  3025  0013A2  0100               	movlb	0	; () banked
  3026  0013A4  2B62               	incf	??_ledout& (0+255),f,b
  3027  0013A6  D003               	goto	u1134
  3028  0013A8                     u1135:
  3029  0013A8  0100               	movlb	0	; () banked
  3030  0013AA  90D8               	bcf	status,0,c
  3031  0013AC  3763               	rlcf	(??_ledout+1)& (0+255),f,b
  3032  0013AE                     u1134:
  3033  0013AE  0100               	movlb	0	; () banked
  3034  0013B0  2F62               	decfsz	??_ledout& (0+255),f,b
  3035  0013B2  D7FA               	goto	u1135
  3036  0013B4  0100               	movlb	0	; () banked
  3037  0013B6  5163               	movf	(??_ledout+1)& (0+255),w,b
  3038  0013B8  0AFF               	xorlw	255
  3039  0013BA  168C               	andwf	3980,f,c	;volatile
  3040  0013BC  0012               	return	
  3041  0013BE                     __end_of_ledout:
  3042                           	opt stack 0
  3043                           tblptru	equ	0xFF8
  3044                           tblptrh	equ	0xFF7
  3045                           tblptrl	equ	0xFF6
  3046                           tablat	equ	0xFF5
  3047                           prodh	equ	0xFF4
  3048                           prodl	equ	0xFF3
  3049                           indf0	equ	0xFEF
  3050                           postinc0	equ	0xFEE
  3051                           fsr0h	equ	0xFEA
  3052                           fsr0l	equ	0xFE9
  3053                           wreg	equ	0xFE8
  3054                           postinc2	equ	0xFDE
  3055                           postdec2	equ	0xFDD
  3056                           fsr2h	equ	0xFDA
  3057                           fsr2l	equ	0xFD9
  3058                           status	equ	0xFD8
  3059                           
  3060 ;; *************** function _delaysec *****************
  3061 ;; Defined at:
  3062 ;;		line 22 in file "timer.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  n               2    0[BANK0 ] int 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  i               2    3[BANK0 ] int 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;		None               void
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3076 ;;      Params:         0       2       0       0       0       0       0       0       0
  3077 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3078 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3079 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3080 ;;Total ram usage:        5 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    3
  3083 ;; This function calls:
  3084 ;;		_timeronesec
  3085 ;; This function is called by:
  3086 ;;		_main
  3087 ;;		_communication
  3088 ;;		_test1
  3089 ;;		_test2
  3090 ;;		_ejectbad
  3091 ;;		_ejectgood
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text19
  3096  00158C                     __ptext19:
  3097                           	opt stack 0
  3098  00158C                     _delaysec:
  3099                           	opt stack 26
  3100                           
  3101                           ;timer.c: 24: int i=0;
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;incstack = 0
  3105  00158C  0E00               	movlw	0
  3106  00158E  0100               	movlb	0	; () banked
  3107  001590  6F64               	movwf	(delaysec@i+1)& (0+255),b
  3108  001592  0E00               	movlw	0
  3109  001594  6F63               	movwf	delaysec@i& (0+255),b
  3110                           
  3111                           ;timer.c: 25: for(i=0;i<n;i++);
  3112  001596  0E00               	movlw	0
  3113  001598  0100               	movlb	0	; () banked
  3114  00159A  6F64               	movwf	(delaysec@i+1)& (0+255),b
  3115  00159C  0E00               	movlw	0
  3116  00159E  6F63               	movwf	delaysec@i& (0+255),b
  3117  0015A0  D003               	goto	l1556
  3118  0015A2                     l1554:
  3119                           
  3120                           ; BSR set to: 0
  3121  0015A2  0100               	movlb	0	; () banked
  3122  0015A4  4B63               	infsnz	delaysec@i& (0+255),f,b
  3123  0015A6  2B64               	incf	(delaysec@i+1)& (0+255),f,b
  3124  0015A8                     l1556:
  3125                           
  3126                           ; BSR set to: 0
  3127  0015A8  0100               	movlb	0	; () banked
  3128  0015AA  5160               	movf	delaysec@n& (0+255),w,b
  3129  0015AC  0100               	movlb	0	; () banked
  3130  0015AE  5D63               	subwf	delaysec@i& (0+255),w,b
  3131  0015B0  0100               	movlb	0	; () banked
  3132  0015B2  5164               	movf	(delaysec@i+1)& (0+255),w,b
  3133  0015B4  0A80               	xorlw	128
  3134  0015B6  0100               	movlb	0	; () banked
  3135  0015B8  6F62               	movwf	??_delaysec& (0+255),b
  3136  0015BA  0100               	movlb	0	; () banked
  3137  0015BC  5161               	movf	(delaysec@n+1)& (0+255),w,b
  3138  0015BE  0A80               	xorlw	128
  3139  0015C0  0100               	movlb	0	; () banked
  3140  0015C2  5962               	subwfb	??_delaysec& (0+255),w,b
  3141  0015C4  A0D8               	btfss	status,0,c
  3142  0015C6  D7ED               	goto	l1554
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;timer.c: 26: timeronesec();
  3146                           
  3147                           ; BSR set to: 0
  3148  0015C8  EC1F  F00B         	call	_timeronesec	;wreg free
  3149  0015CC  0012               	return		;funcret
  3150  0015CE                     __end_of_delaysec:
  3151                           	opt stack 0
  3152                           tblptru	equ	0xFF8
  3153                           tblptrh	equ	0xFF7
  3154                           tblptrl	equ	0xFF6
  3155                           tablat	equ	0xFF5
  3156                           prodh	equ	0xFF4
  3157                           prodl	equ	0xFF3
  3158                           indf0	equ	0xFEF
  3159                           postinc0	equ	0xFEE
  3160                           fsr0h	equ	0xFEA
  3161                           fsr0l	equ	0xFE9
  3162                           wreg	equ	0xFE8
  3163                           postinc2	equ	0xFDE
  3164                           postdec2	equ	0xFDD
  3165                           fsr2h	equ	0xFDA
  3166                           fsr2l	equ	0xFD9
  3167                           status	equ	0xFD8
  3168                           
  3169 ;; *************** function _timeronesec *****************
  3170 ;; Defined at:
  3171 ;;		line 11 in file "timer.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;		None
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;		None               void
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3185 ;;      Params:         0       0       0       0       0       0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3188 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3189 ;;Total ram usage:        0 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    2
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_delaysec
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text20
  3200  00163E                     __ptext20:
  3201                           	opt stack 0
  3202  00163E                     _timeronesec:
  3203                           	opt stack 26
  3204                           
  3205                           ;timer.c: 13: TMR0H=0x0b;
  3206                           
  3207                           ;incstack = 0
  3208  00163E  0E0B               	movlw	11
  3209  001640  6ED7               	movwf	4055,c	;volatile
  3210                           
  3211                           ;timer.c: 14: TMR0L=0xdb;
  3212  001642  0EDB               	movlw	219
  3213  001644  6ED6               	movwf	4054,c	;volatile
  3214                           
  3215                           ;timer.c: 15: T0CON|=(1<<7);
  3216  001646  8ED5               	bsf	4053,7,c	;volatile
  3217  001648                     l261:
  3218  001648  A4F2               	btfss	intcon,2,c	;volatile
  3219  00164A  D7FE               	goto	l261
  3220                           
  3221                           ;timer.c: 17: T0IF=0;
  3222  00164C  94F2               	bcf	intcon,2,c	;volatile
  3223                           
  3224                           ;timer.c: 18: T0CON|=(0<<7);
  3225  00164E  50D5               	movf	4053,w,c	;volatile
  3226  001650  0012               	return		;funcret
  3227  001652                     __end_of_timeronesec:
  3228                           	opt stack 0
  3229                           tblptru	equ	0xFF8
  3230                           tblptrh	equ	0xFF7
  3231                           tblptrl	equ	0xFF6
  3232                           tablat	equ	0xFF5
  3233                           prodh	equ	0xFF4
  3234                           prodl	equ	0xFF3
  3235                           intcon	equ	0xFF2
  3236                           indf0	equ	0xFEF
  3237                           postinc0	equ	0xFEE
  3238                           fsr0h	equ	0xFEA
  3239                           fsr0l	equ	0xFE9
  3240                           wreg	equ	0xFE8
  3241                           postinc2	equ	0xFDE
  3242                           postdec2	equ	0xFDD
  3243                           fsr2h	equ	0xFDA
  3244                           fsr2l	equ	0xFD9
  3245                           status	equ	0xFD8
  3246                           
  3247 ;; *************** function _adcinit *****************
  3248 ;; Defined at:
  3249 ;;		line 5 in file "adc.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;		None
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;		None
  3254 ;; Return value:  Size  Location     Type
  3255 ;;		None               void
  3256 ;; Registers used:
  3257 ;;		wreg, status,2
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3263 ;;      Params:         0       0       0       0       0       0       0       0       0
  3264 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3266 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3267 ;;Total ram usage:        0 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    2
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_main
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text21
  3278  00167E                     __ptext21:
  3279                           	opt stack 0
  3280  00167E                     _adcinit:
  3281                           	opt stack 28
  3282                           
  3283                           ;adc.c: 7: ADCON0=0X00;
  3284                           
  3285                           ;incstack = 0
  3286  00167E  0E00               	movlw	0
  3287  001680  6EC2               	movwf	4034,c	;volatile
  3288                           
  3289                           ;adc.c: 8: ADCON1=0X0A;
  3290  001682  0E0A               	movlw	10
  3291  001684  6EC1               	movwf	4033,c	;volatile
  3292                           
  3293                           ;adc.c: 9: ADCON2=0x99;
  3294  001686  0E99               	movlw	153
  3295  001688  6EC0               	movwf	4032,c	;volatile
  3296  00168A  0012               	return		;funcret
  3297  00168C                     __end_of_adcinit:
  3298                           	opt stack 0
  3299                           tblptru	equ	0xFF8
  3300                           tblptrh	equ	0xFF7
  3301                           tblptrl	equ	0xFF6
  3302                           tablat	equ	0xFF5
  3303                           prodh	equ	0xFF4
  3304                           prodl	equ	0xFF3
  3305                           intcon	equ	0xFF2
  3306                           indf0	equ	0xFEF
  3307                           postinc0	equ	0xFEE
  3308                           fsr0h	equ	0xFEA
  3309                           fsr0l	equ	0xFE9
  3310                           wreg	equ	0xFE8
  3311                           postinc2	equ	0xFDE
  3312                           postdec2	equ	0xFDD
  3313                           fsr2h	equ	0xFDA
  3314                           fsr2l	equ	0xFD9
  3315                           status	equ	0xFD8
  3316                           
  3317 ;; *************** function _ISR *****************
  3318 ;; Defined at:
  3319 ;;		line 10 in file "main.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;		None               void
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3333 ;;      Params:         0       0       0       0       0       0       0       0       0
  3334 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3335 ;;      Temps:         14       0       0       0       0       0       0       0       0
  3336 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3337 ;;Total ram usage:       14 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:    1
  3340 ;; This function calls:
  3341 ;;		i2_pneumaticout
  3342 ;; This function is called by:
  3343 ;;		Interrupt level 2
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	intcode
  3348  000008                     __pintcode:
  3349                           	opt stack 0
  3350  000008                     _ISR:
  3351                           	opt stack 26
  3352                           
  3353                           ;incstack = 0
  3354  000008  8252               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3355  00000A  CFFA F044          	movff	pclath,??_ISR
  3356  00000E  CFFB F045          	movff	pclatu,??_ISR+1
  3357  000012  EDD8  F008         	call	int_func,f	;refresh shadow registers
  3358                           pclatu	equ	0xFFB
  3359                           pclath	equ	0xFFA
  3360                           tblptru	equ	0xFF8
  3361                           tblptrh	equ	0xFF7
  3362                           tblptrl	equ	0xFF6
  3363                           tablat	equ	0xFF5
  3364                           prodh	equ	0xFF4
  3365                           prodl	equ	0xFF3
  3366                           intcon	equ	0xFF2
  3367                           indf0	equ	0xFEF
  3368                           postinc0	equ	0xFEE
  3369                           fsr0h	equ	0xFEA
  3370                           fsr0l	equ	0xFE9
  3371                           wreg	equ	0xFE8
  3372                           postinc2	equ	0xFDE
  3373                           postdec2	equ	0xFDD
  3374                           fsr2h	equ	0xFDA
  3375                           fsr2l	equ	0xFD9
  3376                           status	equ	0xFD8
  3377                           
  3378                           	psect	intcode_body
  3379  0011B0                     __pintcode_body:
  3380                           	opt stack 26
  3381  0011B0                     int_func:
  3382                           	opt stack 26
  3383  0011B0  0006               	pop		; remove dummy address from shadow register refresh
  3384  0011B2  CFE9 F046          	movff	fsr0l,??_ISR+2
  3385  0011B6  CFEA F047          	movff	fsr0h,??_ISR+3
  3386  0011BA  CFE1 F048          	movff	fsr1l,??_ISR+4
  3387  0011BE  CFE2 F049          	movff	fsr1h,??_ISR+5
  3388  0011C2  CFD9 F04A          	movff	fsr2l,??_ISR+6
  3389  0011C6  CFDA F04B          	movff	fsr2h,??_ISR+7
  3390  0011CA  CFF3 F04C          	movff	prodl,??_ISR+8
  3391  0011CE  CFF4 F04D          	movff	prodh,??_ISR+9
  3392  0011D2  CFF6 F04E          	movff	tblptrl,??_ISR+10
  3393  0011D6  CFF7 F04F          	movff	tblptrh,??_ISR+11
  3394  0011DA  CFF8 F050          	movff	tblptru,??_ISR+12
  3395  0011DE  CFF5 F051          	movff	tablat,??_ISR+13
  3396                           
  3397                           ;main.c: 12: if(RBIF)
  3398  0011E2  A0F2               	btfss	intcon,0,c	;volatile
  3399  0011E4  D01E               	goto	i2l178
  3400                           
  3401                           ;main.c: 13: {
  3402                           ;main.c: 14: if(PORTB&(0X04))
  3403  0011E6  A481               	btfss	3969,2,c	;volatile
  3404  0011E8  D006               	goto	i2l1460
  3405                           
  3406                           ;main.c: 15: {
  3407                           ;main.c: 16: pneumaticout(0);
  3408  0011EA  0E00               	movlw	0
  3409  0011EC  6E41               	movwf	i2pneumaticout@x+1,c
  3410  0011EE  0E00               	movlw	0
  3411  0011F0  6E40               	movwf	i2pneumaticout@x,c
  3412  0011F2  EC13  F00A         	call	i2_pneumaticout	;wreg free
  3413  0011F6                     i2l1460:
  3414                           
  3415                           ;main.c: 17: }
  3416                           ;main.c: 18: if(PORTB&(0X05));
  3417  0011F6  5081               	movf	3969,w,c	;volatile
  3418                           
  3419                           ;main.c: 19: {
  3420                           ;main.c: 20: pneumaticout(1);
  3421  0011F8  0E00               	movlw	0
  3422  0011FA  6E41               	movwf	i2pneumaticout@x+1,c
  3423  0011FC  0E01               	movlw	1
  3424  0011FE  6E40               	movwf	i2pneumaticout@x,c
  3425  001200  EC13  F00A         	call	i2_pneumaticout	;wreg free
  3426                           
  3427                           ;main.c: 21: }
  3428                           ;main.c: 22: if(PORTB&(0X06));
  3429  001204  5081               	movf	3969,w,c	;volatile
  3430                           
  3431                           ;main.c: 23: {
  3432                           ;main.c: 24: pneumaticout(2);
  3433  001206  0E00               	movlw	0
  3434  001208  6E41               	movwf	i2pneumaticout@x+1,c
  3435  00120A  0E02               	movlw	2
  3436  00120C  6E40               	movwf	i2pneumaticout@x,c
  3437  00120E  EC13  F00A         	call	i2_pneumaticout	;wreg free
  3438                           
  3439                           ;main.c: 25: }
  3440                           ;main.c: 26: if(PORTB&(0X07));
  3441  001212  5081               	movf	3969,w,c	;volatile
  3442                           
  3443                           ;main.c: 27: {
  3444                           ;main.c: 28: pneumaticout(3);
  3445  001214  0E00               	movlw	0
  3446  001216  6E41               	movwf	i2pneumaticout@x+1,c
  3447  001218  0E03               	movlw	3
  3448  00121A  6E40               	movwf	i2pneumaticout@x,c
  3449  00121C  EC13  F00A         	call	i2_pneumaticout	;wreg free
  3450                           
  3451                           ;main.c: 29: }
  3452                           ;main.c: 30: RBIF=0;
  3453  001220  90F2               	bcf	intcon,0,c	;volatile
  3454  001222                     i2l178:
  3455  001222  C051  FFF5         	movff	??_ISR+13,tablat
  3456  001226  C050  FFF8         	movff	??_ISR+12,tblptru
  3457  00122A  C04F  FFF7         	movff	??_ISR+11,tblptrh
  3458  00122E  C04E  FFF6         	movff	??_ISR+10,tblptrl
  3459  001232  C04D  FFF4         	movff	??_ISR+9,prodh
  3460  001236  C04C  FFF3         	movff	??_ISR+8,prodl
  3461  00123A  C04B  FFDA         	movff	??_ISR+7,fsr2h
  3462  00123E  C04A  FFD9         	movff	??_ISR+6,fsr2l
  3463  001242  C049  FFE2         	movff	??_ISR+5,fsr1h
  3464  001246  C048  FFE1         	movff	??_ISR+4,fsr1l
  3465  00124A  C047  FFEA         	movff	??_ISR+3,fsr0h
  3466  00124E  C046  FFE9         	movff	??_ISR+2,fsr0l
  3467  001252  C045  FFFB         	movff	??_ISR+1,pclatu
  3468  001256  C044  FFFA         	movff	??_ISR,pclath
  3469  00125A  9252               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3470  00125C  0011               	retfie		f
  3471  00125E                     __end_of_ISR:
  3472                           	opt stack 0
  3473                           pclatu	equ	0xFFB
  3474                           pclath	equ	0xFFA
  3475                           tblptru	equ	0xFF8
  3476                           tblptrh	equ	0xFF7
  3477                           tblptrl	equ	0xFF6
  3478                           tablat	equ	0xFF5
  3479                           prodh	equ	0xFF4
  3480                           prodl	equ	0xFF3
  3481                           intcon	equ	0xFF2
  3482                           indf0	equ	0xFEF
  3483                           postinc0	equ	0xFEE
  3484                           fsr0h	equ	0xFEA
  3485                           fsr0l	equ	0xFE9
  3486                           wreg	equ	0xFE8
  3487                           fsr1h	equ	0xFE2
  3488                           fsr1l	equ	0xFE1
  3489                           postinc2	equ	0xFDE
  3490                           postdec2	equ	0xFDD
  3491                           fsr2h	equ	0xFDA
  3492                           fsr2l	equ	0xFD9
  3493                           status	equ	0xFD8
  3494                           
  3495 ;; *************** function i2_pneumaticout *****************
  3496 ;; Defined at:
  3497 ;;		line 20 in file "ioport.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  x               2    0[COMRAM] int 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;		None               void
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3511 ;;      Params:         2       0       0       0       0       0       0       0       0
  3512 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3513 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3514 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3515 ;;Total ram usage:        4 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; This function calls:
  3518 ;;		Nothing
  3519 ;; This function is called by:
  3520 ;;		_ISR
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           	psect	text23
  3525  001426                     __ptext23:
  3526                           	opt stack 0
  3527  001426                     i2_pneumaticout:
  3528                           	opt stack 26
  3529                           
  3530                           ;ioport.c: 22: x+=4;
  3531                           
  3532                           ;incstack = 0
  3533  001426  0E04               	movlw	4
  3534  001428  2640               	addwf	i2pneumaticout@x,f,c
  3535  00142A  0E00               	movlw	0
  3536  00142C  2241               	addwfc	i2pneumaticout@x+1,f,c
  3537                           
  3538                           ;ioport.c: 23: if(!(LATD &(1<<x)))
  3539  00142E  C040  F042         	movff	i2pneumaticout@x,??i2_pneumaticout
  3540  001432  0E01               	movlw	1
  3541  001434  6E43               	movwf	(??i2_pneumaticout+1)& (0+255),c
  3542  001436  2A42               	incf	??i2_pneumaticout,f,c
  3543  001438  D002               	goto	i2u92_44
  3544  00143A                     i2u92_45:
  3545  00143A  90D8               	bcf	status,0,c
  3546  00143C  3643               	rlcf	??i2_pneumaticout+1,f,c
  3547  00143E                     i2u92_44:
  3548  00143E  2E42               	decfsz	??i2_pneumaticout,f,c
  3549  001440  D7FC               	goto	i2u92_45
  3550  001442  5043               	movf	??i2_pneumaticout+1,w,c
  3551  001444  148C               	andwf	3980,w,c	;volatile
  3552  001446  0900               	iorlw	0
  3553  001448  A4D8               	btfss	status,2,c
  3554  00144A  D00D               	goto	i2l1452
  3555                           
  3556                           ;ioport.c: 24: LATD |=(1<<x);
  3557  00144C  C040  F042         	movff	i2pneumaticout@x,??i2_pneumaticout
  3558  001450  0E01               	movlw	1
  3559  001452  6E43               	movwf	(??i2_pneumaticout+1)& (0+255),c
  3560  001454  2A42               	incf	??i2_pneumaticout,f,c
  3561  001456  D002               	goto	i2u94_44
  3562  001458                     i2u94_45:
  3563  001458  90D8               	bcf	status,0,c
  3564  00145A  3643               	rlcf	??i2_pneumaticout+1,f,c
  3565  00145C                     i2u94_44:
  3566  00145C  2E42               	decfsz	??i2_pneumaticout,f,c
  3567  00145E  D7FC               	goto	i2u94_45
  3568  001460  5043               	movf	??i2_pneumaticout+1,w,c
  3569  001462  128C               	iorwf	3980,f,c	;volatile
  3570  001464  0012               	return	
  3571  001466                     i2l1452:
  3572                           
  3573                           ;ioport.c: 25: else
  3574                           ;ioport.c: 26: LATD &=(~(1<<x));
  3575  001466  C040  F042         	movff	i2pneumaticout@x,??i2_pneumaticout
  3576  00146A  0E01               	movlw	1
  3577  00146C  6E43               	movwf	(??i2_pneumaticout+1)& (0+255),c
  3578  00146E  2A42               	incf	??i2_pneumaticout,f,c
  3579  001470  D002               	goto	i2u95_44
  3580  001472                     i2u95_45:
  3581  001472  90D8               	bcf	status,0,c
  3582  001474  3643               	rlcf	??i2_pneumaticout+1,f,c
  3583  001476                     i2u95_44:
  3584  001476  2E42               	decfsz	??i2_pneumaticout,f,c
  3585  001478  D7FC               	goto	i2u95_45
  3586  00147A  5043               	movf	??i2_pneumaticout+1,w,c
  3587  00147C  0AFF               	xorlw	255
  3588  00147E  168C               	andwf	3980,f,c	;volatile
  3589  001480  0012               	return	
  3590  001482                     __end_ofi2_pneumaticout:
  3591                           	opt stack 0
  3592                           pclatu	equ	0xFFB
  3593                           pclath	equ	0xFFA
  3594                           tblptru	equ	0xFF8
  3595                           tblptrh	equ	0xFF7
  3596                           tblptrl	equ	0xFF6
  3597                           tablat	equ	0xFF5
  3598                           prodh	equ	0xFF4
  3599                           prodl	equ	0xFF3
  3600                           intcon	equ	0xFF2
  3601                           indf0	equ	0xFEF
  3602                           postinc0	equ	0xFEE
  3603                           fsr0h	equ	0xFEA
  3604                           fsr0l	equ	0xFE9
  3605                           wreg	equ	0xFE8
  3606                           fsr1h	equ	0xFE2
  3607                           fsr1l	equ	0xFE1
  3608                           postinc2	equ	0xFDE
  3609                           postdec2	equ	0xFDD
  3610                           fsr2h	equ	0xFDA
  3611                           fsr2l	equ	0xFD9
  3612                           status	equ	0xFD8
  3613                           pclatu	equ	0xFFB
  3614                           pclath	equ	0xFFA
  3615                           tblptru	equ	0xFF8
  3616                           tblptrh	equ	0xFF7
  3617                           tblptrl	equ	0xFF6
  3618                           tablat	equ	0xFF5
  3619                           prodh	equ	0xFF4
  3620                           prodl	equ	0xFF3
  3621                           intcon	equ	0xFF2
  3622                           indf0	equ	0xFEF
  3623                           postinc0	equ	0xFEE
  3624                           fsr0h	equ	0xFEA
  3625                           fsr0l	equ	0xFE9
  3626                           wreg	equ	0xFE8
  3627                           fsr1h	equ	0xFE2
  3628                           fsr1l	equ	0xFE1
  3629                           postinc2	equ	0xFDE
  3630                           postdec2	equ	0xFDD
  3631                           fsr2h	equ	0xFDA
  3632                           fsr2l	equ	0xFD9
  3633                           status	equ	0xFD8
  3634                           
  3635                           	psect	rparam
  3636  0000                     pclatu	equ	0xFFB
  3637                           pclath	equ	0xFFA
  3638                           tblptru	equ	0xFF8
  3639                           tblptrh	equ	0xFF7
  3640                           tblptrl	equ	0xFF6
  3641                           tablat	equ	0xFF5
  3642                           prodh	equ	0xFF4
  3643                           prodl	equ	0xFF3
  3644                           intcon	equ	0xFF2
  3645                           indf0	equ	0xFEF
  3646                           postinc0	equ	0xFEE
  3647                           fsr0h	equ	0xFEA
  3648                           fsr0l	equ	0xFE9
  3649                           wreg	equ	0xFE8
  3650                           fsr1h	equ	0xFE2
  3651                           fsr1l	equ	0xFE1
  3652                           postinc2	equ	0xFDE
  3653                           postdec2	equ	0xFDD
  3654                           fsr2h	equ	0xFDA
  3655                           fsr2l	equ	0xFD9
  3656                           status	equ	0xFD8
  3657                           
  3658                           	psect	temp
  3659  000052                     btemp:
  3660                           	opt stack 0
  3661  000052                     	ds	1
  3662  0000                     int$flags	set	btemp
  3663                           pclatu	equ	0xFFB
  3664                           pclath	equ	0xFFA
  3665                           tblptru	equ	0xFF8
  3666                           tblptrh	equ	0xFF7
  3667                           tblptrl	equ	0xFF6
  3668                           tablat	equ	0xFF5
  3669                           prodh	equ	0xFF4
  3670                           prodl	equ	0xFF3
  3671                           intcon	equ	0xFF2
  3672                           indf0	equ	0xFEF
  3673                           postinc0	equ	0xFEE
  3674                           fsr0h	equ	0xFEA
  3675                           fsr0l	equ	0xFE9
  3676                           wreg	equ	0xFE8
  3677                           fsr1h	equ	0xFE2
  3678                           fsr1l	equ	0xFE1
  3679                           postinc2	equ	0xFDE
  3680                           postdec2	equ	0xFDD
  3681                           fsr2h	equ	0xFDA
  3682                           fsr2l	equ	0xFD9
  3683                           status	equ	0xFD8


Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      81
    BANK0           160     12      20
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    uarttx@s	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->i2_pneumaticout

Critical Paths under _main in BANK0

    _main->_comparison
    _test2->_adcread
    _test1->_adcread
    _offsetread->_adcread
    _ejectgood->_delaysec
    _ejectbad->_delaysec
    _comparison->___wmul
    _communication->_delaysec

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   27209
                            _adcinit
                      _communication
                         _comparison
                           _delaysec
                           _ejectbad
                          _ejectgood
                             _ioinit
                         _offsetread
                              _test1
                              _test2
                          _timerinit
                           _uartinit
 ---------------------------------------------------------------------------------
 (1) _uartinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerinit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _test2                                                0     0      0    6020
                            _adcread
                           _delaysec
                             _ledout
                        _solinoidout
 ---------------------------------------------------------------------------------
 (1) _test1                                                0     0      0    6020
                            _adcread
                           _delaysec
                             _ledout
                        _solinoidout
 ---------------------------------------------------------------------------------
 (1) _offsetread                                           0     0      0    1605
                            _adcread
 ---------------------------------------------------------------------------------
 (2) _adcread                                              8     6      2    1605
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _ioinit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ejectgood                                            4     4      0    3183
                                              5 BANK0      4     4      0
                           _delaysec
                       _pneumaticout
                        _solinoidout
 ---------------------------------------------------------------------------------
 (1) _ejectbad                                             4     4      0    3183
                                              5 BANK0      4     4      0
                           _delaysec
                       _pneumaticout
                        _solinoidout
 ---------------------------------------------------------------------------------
 (2) _solinoidout                                          4     2      2    1633
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _pneumaticout                                         4     2      2     418
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _comparison                                           6     6      0    1811
                                              6 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1464
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _communication                                        5     5      0    4546
                                              5 BANK0      2     2      0
                           _delaysec
                             _ledout
                             _uartrx
                             _uarttx
                           _uarttxch
 ---------------------------------------------------------------------------------
 (2) _uarttxch                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _uarttx                                               2     0      2    1682
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _uartrx                                               1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ledout                                               4     2      2    1941
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _delaysec                                             5     3      2     841
                                              0 BANK0      5     3      2
                        _timeronesec
 ---------------------------------------------------------------------------------
 (3) _timeronesec                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                 14    14      0     171
                                              4 COMRAM    14    14      0
                     i2_pneumaticout
 ---------------------------------------------------------------------------------
 (5) i2_pneumaticout                                       4     2      2     171
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcinit
   _communication
     _delaysec
       _timeronesec
     _ledout
     _uartrx
     _uarttx
     _uarttxch
   _comparison
     ___wmul
   _delaysec
     _timeronesec
   _ejectbad
     _delaysec
       _timeronesec
     _pneumaticout
     _solinoidout
   _ejectgood
     _delaysec
       _timeronesec
     _pneumaticout
     _solinoidout
   _ioinit
   _offsetread
     _adcread
   _test1
     _adcread
     _delaysec
       _timeronesec
     _ledout
     _solinoidout
   _test2
     _adcread
     _delaysec
       _timeronesec
     _ledout
     _solinoidout
   _timerinit
   _uartinit

 _ISR (ROOT)
   i2_pneumaticout

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      C      14       5       12.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      51       1       86.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      65      20        0.0%
DATA                 0      0      65       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Jan 16 10:39:15 2016

                     l80 1666                       l73 1538                       l86 1670  
            _solinoidout 12DA                       _ch 003C              __CFG_BOR$ON 000000  
    ___wmul@multiplicand 0062              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l113 14EE                      l241 0A7C                      l225 11AE  
                    l234 10EE                      l261 1648                      l190 13FE  
                    l184 13CE                      l196 1424             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      _ISR 0008                      wreg 000FE8  
           __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000                     ?_ISR 0040  
          _communication 0A7E             __CFG_WDT$OFF 000000                     l1512 12B4  
                   l1506 1326                     l1518 1398                     l1526 1564  
                   l1702 0A68                     l1720 114E                     l1712 1110  
                   l1554 15A2                     l1556 15A8                     l1732 11A6  
                   l1724 1166                     l1716 1146                     l1708 10FA  
                   l1750 108E                     l1742 1050                     l1584 0A7E  
                   l1728 117C                     l1762 10E6                     l1754 10A6  
                   l1746 1086                     l1738 103A                     l1676 0C48  
                   l1692 082A                     l1758 10BC                     l1776 13DA  
                   STR_1 0801                     _T0IF 007F92                     u1104 1362  
                   u1024 12F0                     u1105 135C                     u1025 12EA  
                   u1124 138A                     u1044 1318                     u1125 1384  
                   u1045 1312                     u1134 13AE                     u1150 155C  
                   u1054 133C                     u1135 13A8                     u1055 1336  
                   u1215 1504                     u1160 1584                     u1064 127E  
                   u1065 1278                     u1250 0828                     u1084 12A6  
                   u1157 1552                     u1085 12A0                     u1094 12CA  
                   u1167 157A                     u1095 12C4                     _LATC 000F8B  
                   _LATD 000F8C                     _RBIF 007F90                     _RCIF 007CF5  
                   _TXIF 007CF4                     _main 13BE                     _good 006C  
                   _pres 003E                     fsr0h 000FEA                     fsr1h 000FE2  
                   indf0 000FEF                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0052  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 0016            __CFG_IESO$OFF 000000              comparison@i 006A  
           ___param_bank 000010                    ??_ISR 0044            __CFG_PLLDIV$1 000000  
                  ?_main 0040                    _T0CON 000FD5                    i2l178 1222  
        __end_of_adcinit 168C          __end_of_adcread 1536                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _SPBRG 000FAF                    _PORTA 000F80                    _PORTB 000F81  
          __CFG_USBDIV$1 000000                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TXREG 000FAD  
                  _TXSTA 000FAC            __CFG_PWRT$OFF 000000           i2_pneumaticout 1426  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         ?_communication 0040           __CFG_EBTRB$OFF 000000                    _glove 0037  
                  _test1 0E84                    _test2 0CD8                    _value 002D  
                  tablat 000FF5                    status 000FD8           __CFG_ICPRT$OFF 000000  
         __CFG_MCLRE$OFF 000000          __initialization 1604             __end_of_main 1426  
                 ??_main 006C   __end_ofi2_pneumaticout 1482            __activetblptr 000002  
        __CFG_CCP2MX$OFF 000000                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 ?_test1 0040                   ?_test2 0040                   i2l1452 1466  
                 i2l1460 11F6                   _INTCON 000FF2             solinoidout@x 0060  
       __end_of_delaysec 15CE         __end_of_ejectbad 11B0           __CFG_XINST$OFF 000000  
                 ___wmul 15CE                ??_adcinit 0060                ??_adcread 0062  
                 _ledout 134C                   _ioinit 1652                   clear_0 160A  
                 clear_1 1616                   _sensor 0001                   _uartrx 1670  
                 _uarttx 1536          ?i2_pneumaticout 0040          ??_communication 0065  
           __mediumconst 0000         __end_of_uartinit 163E                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8         __end_of_uarttxch 1670  
        i2pneumaticout@x 0040             ?_timeronesec 0040               __accesstop 0060  
__end_of__initialization 161C          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0040            __end_of_test1 1030             ?_solinoidout 0060  
          __end_of_test2 0E84       __size_of_ejectgood 00C0                  ??_test1 0068  
                ??_test2 0068               __pbssBANK0 006C                  ?___wmul 0060  
                ?_ledout 0060                  _BAUDCON 000FB8                  ?_ioinit 0040  
                ?_uartrx 0040                  ?_uarttx 0060       __size_of_timerinit 0006  
              ?_delaysec 0060                ?_ejectbad 0040                  i2u92_44 143E  
                i2u92_45 143A                  i2u94_44 145C                  i2u94_45 1458  
                i2u95_44 1476                  i2u95_45 1472               _comparison 0806  
        __CFG_VREGEN$OFF 000000        __end_of_ejectgood 10F0                  __Hparam 0000  
                __Lparam 0000          communication@rx 0066                ?_uartinit 0040  
              ?_uarttxch 0040          __size_of___wmul 0036                  _adcinit 167E  
                _adcread 14DC             __psmallconst 0800          __CFG_STVREN$OFF 000000  
        __size_of_ledout 0072                  __pcinit 1604          __size_of_ioinit 0010  
                __ramtop 0800            ?_pneumaticout 0060                  __ptext0 13BE  
                __ptext1 162A                  __ptext2 168C                  __ptext3 0CD8  
                __ptext4 0E84                  __ptext5 1482                  __ptext6 14DC  
                __ptext7 1652                  __ptext8 1030                  __ptext9 10F0  
        __size_of_uartrx 000E          __size_of_uarttx 0056             __size_of_ISR 1256  
             _offsetread 1482               ??_delaysec 0062               ??_ejectbad 0065  
         __pintcode_body 11B0     end_of_initialization 161C                  ledout@x 0060  
          __Lmediumconst 0000                  int_func 11B0     __size_of_timeronesec 0014  
      __end_of_timerinit 1692                  uarttx@s 0060               ??_uartinit 0060  
                postdec2 000FDD               ??_uarttxch 0060                  postinc0 000FEE  
                postinc2 000FDE         ??i2_pneumaticout 0042               ejectgood@i 0067  
         ??_pneumaticout 0062     __size_of_solinoidout 0072                _TRISCbits 000F94  
            ?_comparison 0040           __end_of___wmul 1604           __end_of_ledout 13BE  
         __end_of_ioinit 1662           __end_of_uartrx 167E           __end_of_uarttx 158C  
            ?_offsetread 0040      start_initialization 1604              __end_of_ISR 125E  
  __end_of_communication 0CD8                 ??___wmul 0064         __CFG_LPT1OSC$OFF 000000  
               ??_ledout 0062      __size_of_comparison 0278                 ??_ioinit 0060  
               ??_uartrx 0060                 ??_uarttx 0062              __pbssCOMRAM 0001  
          __pcstackBANK0 0060        __size_of_delaysec 0042        __size_of_ejectbad 00C0  
   __end_of_pneumaticout 12DA      __size_of_offsetread 005A                __pintcode 0008  
              _ejectgood 1030                 ?_adcinit 0040                 ?_adcread 0060  
         adcread@channel 0060        __size_of_uartinit 0014        __size_of_uarttxch 000E  
            __smallconst 0800           __size_of_test1 01AC           __size_of_test2 01AC  
         ___wmul@product 0064                delaysec@i 0063                delaysec@n 0060  
              ejectbad@i 0067         __CFG_WDTPS$32768 000000               ?_ejectgood 0040  
              _timerinit 168C        ___wmul@multiplier 0060               uarttxch@ch 0060  
           ??_comparison 0066            ??_timeronesec 0060                 __Hrparam 0000  
               __Lrparam 0000            ??_solinoidout 0062               ?_timerinit 0040  
          pneumaticout@x 0060         __size_of_adcinit 000E         __size_of_adcread 005A  
     __end_of_comparison 0A7E             ??_offsetread 0068                 _delaysec 158C  
               _ejectbad 10F0    __size_of_pneumaticout 007C                 __ptext10 12DA  
               __ptext11 125E                 __ptext20 163E                 __ptext12 0806  
               __ptext21 167E                 __ptext13 15CE                 __ptext14 0A7E  
               __ptext23 1426                 __ptext15 1662                 __ptext16 1536  
               __ptext17 1670                 __ptext18 134C                 __ptext19 158C  
               adcread@x 0066            __size_of_main 0068      __end_of_timeronesec 1652  
     __end_of_offsetread 14DC                 _uartinit 162A              ??_ejectgood 0065  
               _uarttxch 1662                 int$flags 0052             _pneumaticout 125E  
  __CFG_CPUDIV$OSC1_PLL2 000000      __end_of_solinoidout 134C  __size_ofi2_pneumaticout 005C  
               intlevel2 0000                 uartrx@rx 0060   __size_of_communication 025A  
            ??_timerinit 0060              _timeronesec 163E  
